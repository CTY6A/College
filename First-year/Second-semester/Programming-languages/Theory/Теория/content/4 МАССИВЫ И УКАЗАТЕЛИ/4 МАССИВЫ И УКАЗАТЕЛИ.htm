<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/filelist.xml">
<link rel=Edit-Time-Data href="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>4. Массивы и указатели</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place" downloadurl="http://www.5iantlavalamp.com/"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>user</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>user</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2011-03-30T13:59:00Z</o:Created>
  <o:LastSaved>2011-03-30T13:59:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>3225</o:Words>
  <o:Characters>18383</o:Characters>
  <o:Lines>153</o:Lines>
  <o:Paragraphs>43</o:Paragraphs>
  <o:CharactersWithSpaces>21565</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Lucida Console";
	panose-1:2 11 6 9 4 5 4 2 2 4;
	mso-font-charset:204;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482993 6144 0 0 31 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;}
h2
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:14.0pt;
	font-family:Arial;
	font-style:italic;}
p.H1, li.H1, div.H1
	{mso-style-name:_H1;
	mso-style-parent:"Заголовок 1";
	mso-style-link:"_H1 Знак";
	margin-top:18.0pt;
	margin-right:0cm;
	margin-bottom:18.0pt;
	margin-left:0cm;
	text-align:center;
	page-break-before:always;
	mso-pagination:no-line-numbers;
	mso-outline-level:1;
	font-size:20.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	text-transform:uppercase;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.P, li.P, div.P
	{mso-style-name:_P;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:35.45pt;
	mso-pagination:none;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.Code
	{mso-style-name:_Code;
	mso-style-parent:"";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Lucida Console";
	mso-ascii-font-family:"Lucida Console";
	mso-hansi-font-family:"Lucida Console";}
p.H2, li.H2, div.H2
	{mso-style-name:_H2;
	mso-style-parent:"Заголовок 2";
	margin-top:18.0pt;
	margin-right:0cm;
	margin-bottom:18.0pt;
	margin-left:0cm;
	text-align:center;
	mso-pagination:none;
	page-break-after:avoid;
	mso-outline-level:2;
	mso-hyphenate:none;
	font-size:18.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	text-transform:uppercase;
	mso-ansi-language:EN-US;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.IMG, li.IMG, div.IMG
	{mso-style-name:_IMG;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:none;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.H10
	{mso-style-name:"_H1 Знак";
	mso-style-locked:yes;
	mso-style-parent:"";
	mso-style-link:_H1;
	mso-ansi-font-size:20.0pt;
	mso-bidi-font-size:20.0pt;
	text-transform:uppercase;
	mso-ansi-language:RU;
	mso-fareast-language:RU;
	mso-bidi-language:AR-SA;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:2.0cm 42.5pt 2.0cm 3.0cm;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:973680741;
	mso-list-type:hybrid;
	mso-list-template-ids:-1110646560 68747281 68747289 68747291 68747279 68747289 68747291 68747279 68747289 68747291;}
@list l0:level1
	{mso-level-text:"%1\)";
	mso-level-tab-stop:71.45pt;
	mso-level-number-position:left;
	margin-left:71.45pt;
	text-indent:-18.0pt;}
@list l1
	{mso-list-id:1060179502;
	mso-list-type:hybrid;
	mso-list-template-ids:-619276300 68747279 68747289 68747291 68747279 68747289 68747291 68747279 68747289 68747291;}
@list l1:level1
	{mso-level-tab-stop:71.45pt;
	mso-level-number-position:left;
	margin-left:71.45pt;
	text-indent:-18.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]-->
</head>

<body lang=RU style='tab-interval:35.4pt'>

<div class=Section1>

<p class=H1 style='mso-outline-level:2'><a name="_Toc266272252"></a><a
name="_Toc265340292"></a><a name="_Toc263373063"><span style='mso-bookmark:
_Toc265340292'><span style='mso-bookmark:_Toc266272252'>4. Массивы и указатели</span></span></a></p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272253"></a><a
name="_Toc265340293"></a><a name="_Toc263373064"><span style='mso-bookmark:
_Toc265340293'><span style='mso-bookmark:_Toc266272253'><span style='mso-ansi-language:
RU'>4.1. Одномерные массивы и их инициализация</span></span></span></a><span
style='mso-ansi-language:RU'><o:p></o:p></span></p>

<p class=P><i style='mso-bidi-font-style:normal'>Массивы</i> – это
индексированные наборы данных определенного типа. Для обращения к элементу
массива, мы указываем имя массива и номер позиции этого элемента в массиве.</p>

<p class=P>На рис.4.1 показан целочисленный массив <span class=SpellE><span
lang=EN-US style='mso-ansi-language:EN-US'>mas</span></span>. К каждому
элементу этого массива можно обратиться, задав порядковый номер элемента (от 0
до 9) и его имя (<span class=SpellE><span lang=EN-US style='mso-ansi-language:
EN-US'>mas</span></span>). Первый элемент в любом массиве имеет нулевой
порядковый номер.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=IMG><!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600"
 o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f"
 stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:458.25pt;
 height:274.5pt'>
 <v:imagedata src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image001.gif" o:title="48"/>
</v:shape><![endif]--><![if !vml]><img width=611 height=366
src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image001.gif" v:shapes="_x0000_i1025"><![endif]></p>

<p class=IMG style='text-indent:72.0pt'><o:p>&nbsp;</o:p></p>

<p class=P align=center style='text-align:center;text-indent:0cm'>Рис 4.1.
Массив из 10 элементов</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Таким образом, первый элемент массива <span class=SpellE><span
lang=EN-US style='mso-ansi-language:EN-US'>mas</span></span> обозначается как <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>mas</span></span></span><span
class=Code><span style='font-size:12.0pt'>[0]</span></span> и его значение
равно 23, второй элемент как <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>mas</span></span></span><span class=Code><span
style='font-size:12.0pt'>[1]</span></span> со значением 57, седьмой элемент как
<span class=SpellE><span class=Code><span style='font-size:12.0pt'>mas</span></span></span><span
class=Code><span style='font-size:12.0pt'>[6]</span></span> <span lang=EN-US
style='mso-ansi-language:EN-US'>co</span> значением 1. В общем случае, <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>i</span></span>-тый</span>
элемент массива <span class=SpellE><span class=Code><span style='font-size:
12.0pt'>mas</span></span></span> обозначается как <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>mas</span></span></span><span
class=Code><span style='font-size:12.0pt'>[i-1]</span></span>.</p>

<p class=P>Номер позиции элемента, содержащийся внутри квадратных скобок, называют
индексом. Индекс должен быть целым числом или целочисленным выражением. Если в
программе в качестве индекса используется выражение, то для определения индекса
происходит оценка этого выражения. Например, если <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>a</span></span></span><span
class=Code><span style='font-size:12.0pt'> = 2</span></span> и <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>b</span></span></span><span
class=Code><span style='font-size:12.0pt'> = 3</span></span>, то оператор</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>mas</span></span></span><span
class=Code><span style='font-size:12.0pt'>[<span class=SpellE>a+b</span>] = <span
class=SpellE>mas</span>[<span class=SpellE>a+b</span>] + 2;<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='text-indent:0cm'>прибавляет 2 к элементу массива <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>mas</span></span></span><span
class=Code><span style='font-size:12.0pt'>[5]</span></span>.</p>

<p class=P>Следующая строка выводит сумму значений первых трех элементов массива
<span class=SpellE><span class=Code><span style='font-size:12.0pt'>mas</span></span></span>:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>printf</span></span></span></span><span
class=GramE><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>(</span></span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>“%<span
class=SpellE>d”,mas</span>[0]+<span class=SpellE>mas</span>[1]+<span
class=SpellE>mas</span>[2]);<o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P>Для того чтобы разделить значение седьмого элемента массива <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>mas</span></span></span>
на 2 и присвоить результат переменной <span lang=EN-US style='font-size:12.0pt;
font-family:"Lucida Console";mso-ansi-language:EN-US'>x</span>, можно написать</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>x</span></span></span><span
class=Code><span style='font-size:12.0pt'> = <span class=SpellE>mas</span>[6] /
2;<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Скобки, в которые заключается индекс массива, на самом деле, рассматриваются
в качестве операции языка Си. Они имеют тот же самый приоритет, что и круглые
скобки, т.е. наивысший.</p>

<p class=P>Массивы занимают определенное место в памяти. Поэтому нужно
определить тип элементов массива и число элементов в массиве, чтобы компьютер
мог зарезервировать соответствующий объем памяти. Для выделения памяти
целочисленному массиву из 10 элементов, нужно написать</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>mas</span>[10];<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>При помощи одного объявления можно зарезервировать память для нескольких
массивов:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>a</span>[100], <span
class=SpellE>b</span>[50];<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Массив можно инициализировать при объявлении путем помещения вслед
за его объявлением знака равенства и списка (заключенного в фигурные скобки)
инициализирующих значений, разделенных запятыми, т.е.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt'> </span></span><span
class=SpellE><span class=Code><span style='font-size:12.0pt'>mas</span></span></span><span
class=Code><span style='font-size:12.0pt'>[10] = {2,5,7,9,10,13,17,20,23,25};<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Если инициализирующих значений меньше, чем элементов массива, остающиеся
элементы большинством компиляторов автоматически инициализируются нулями.
Поэтому, для того, чтобы инициализировать все элементы массива нулем, следует
написать:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt'> </span></span><span
class=SpellE><span class=Code><span style='font-size:12.0pt'>mas</span></span></span><span
class=Code><span style='font-size:12.0pt'>[10] = {0};<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Данное выражение явно инициализирует нулем первый элемент и автоматически
инициализирует <span class=GramE>нулями</span> оставшиеся девять элементов,
поскольку инициализирующих значений меньше, чем элементов в массиве. С точки
зрения хорошего стиля программирования рекомендуется отдавать предпочтение
явной инициализации всех элементов.</p>

<p class=P>Если инициализирующих значений больше, чем элементов массива, то это
вызовет синтаксическую ошибку. Типичной ошибкой является ссылка на элемент,
находящийся вне границ массива.</p>

<p class=P>Если размер массива не включается в его объявление со списком инициализирующих
значений, то число элементов в массиве будет равно числу элементов в списке
инициализации. Например, объявлением</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>mas</span>[] =
{2,5,7,9,10};<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='text-indent:0cm'>создан массив из 5 элементов.</p>

<p class=P>В нижеследующем примере демонстрируется инициализация массива значениями,
вводимыми с клавиатуры.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>#include &lt;<span class=SpellE>stdio.h</span>&gt;<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
main()<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span>// объявление массива из 10 элементов<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span>// и вспомогательной переменной <span
class=SpellE>i</span><o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span><span class=SpellE>int</span> <span
class=SpellE>n</span>[10], <span class=SpellE>i</span>;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span>// чтение элементов, вводимых с клавиатуры<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span></span></span><span class=GramE><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>for</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> (<span
class=SpellE>i</span>=0; <span class=SpellE>i</span>&lt;=9; <span class=SpellE>i</span>++)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>    </span><span
class=SpellE><span class=GramE>scanf</span></span><span class=GramE>(</span>&quot;%d&quot;,
&amp;n[<span class=SpellE>i</span>]);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span>//</span></span><span
class=Code><span style='font-size:12.0pt'>вывод</span></span><span class=Code><span
style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>элементов</span></span><span
class=Code><span style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>массива</span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>printf</span></span><span class=GramE>(</span>&quot;%s%13s\n&quot;,
&quot;Element&quot;, &quot;Value&quot;);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>for</span> (<span class=SpellE>i</span>=0; <span class=SpellE>i</span>&lt;=9;
<span class=SpellE>i</span>++)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>    </span><span
class=SpellE><span class=GramE>printf</span></span><span class=GramE>(</span>&quot;%7d%13d\n&quot;,
<span class=SpellE>i</span>, n[<span class=SpellE>i</span>]);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Результаты работы программы выглядят следующим образом:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>5 8 12 17 23 30 38 47 57 68</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE>Element</span><span
style='mso-spacerun:yes'>        </span><span class=SpellE>Value</span></p>

<p class=P>0<span style='mso-tab-count:2'>                 </span>5</p>

<p class=P>1<span style='mso-tab-count:2'>                 </span>8</p>

<p class=P>2<span style='mso-tab-count:2'>                 </span>12</p>

<p class=P>3<span style='mso-tab-count:2'>                 </span>17</p>

<p class=P>4<span style='mso-tab-count:2'>                 </span>23</p>

<p class=P>5<span style='mso-tab-count:2'>                 </span>30</p>

<p class=P>6 <span style='mso-tab-count:2'>                </span>38</p>

<p class=P>7<span style='mso-tab-count:2'>                 </span>47</p>

<p class=P>8<span style='mso-tab-count:2'>                 </span>57</p>

<p class=P>9<span style='mso-tab-count:2'>                 </span>68</p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272254"></a><a
name="_Toc265340294"></a><a name="_Toc263373065"><span style='mso-bookmark:
_Toc265340294'><span style='mso-bookmark:_Toc266272254'><span style='mso-ansi-language:
RU'>4.2. Многомерные массивы и их инициализация</span></span></span></a><span
style='mso-ansi-language:RU'><o:p></o:p></span></p>

<p class=P>Массивы в Си могут иметь несколько индексов. Многомерные массивы
часто применяются для представления таблиц, состоящих из значений, упорядоченных
по строкам и столбцам. Для обращения к конкретному элементу массива нужно
указать два индекса: первый, идентифицирующий строку элемента, и второй,
идентифицирующий столбец. Массивы, требующие двух индексов для обращения к
элементам, называются двумерными массивами. Существуют также трехмерные,
четырехмерные и т.д., многомерные массивы, которые, в общем случае, могут иметь
более двух индексов.</p>

<p class=P>Рис.4.2 иллюстрирует двумерный массив <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>b</span></span></span>. Массив
содержит три строки и четыре столбца, поэтому говорят, что это массив 3 на 4. В
общем случае, массив с <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>m</span></span></span> строками и <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>n</span></span></span> столбцами
называется массивом <span lang=EN-US style='mso-ansi-language:EN-US'>m</span>
на <span lang=EN-US style='mso-ansi-language:EN-US'>n</span>.</p>

<p class=P>На рис.4.2 каждый элемент массива идентифицируется как <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>b</span></span></span><span
class=Code><span style='font-size:12.0pt'>[<span class=SpellE>i</span>][<span
class=SpellE>j</span>]</span></span>; здесь <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>b</span></span></span> имя массива, <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>i</span></span></span>
и <span class=SpellE><span class=Code><span style='font-size:12.0pt'>j</span></span></span>
его индексы, которые однозначно определяют каждый элемент в массиве <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>b</span></span></span>.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=IMG><!--[if gte vml 1]><v:shape id="_x0000_i1027" type="#_x0000_t75"
 style='width:345pt;height:156.75pt'>
 <v:imagedata src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image002.png" o:title="59"/>
</v:shape><![endif]--><![if !vml]><img width=460 height=209
src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image003.jpg" v:shapes="_x0000_i1027"><![endif]></p>

<p class=IMG><o:p>&nbsp;</o:p></p>

<p class=P align=center style='text-align:center;text-indent:0cm'>Рис.4.2.
Двумерный массив с тремя строками и четырьмя столбцами</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Многомерный массив, как и одномерный, может быть инициализирован при
его объявлении. Например, двумерный массив <span class=Code><span
style='font-size:12.0pt'>с[2][2]</span></span> может быть объявлен и
инициализирован следующим образом:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>c</span>[2][2] =
{{1,2},{3,4}};<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='text-indent:0cm'>либо так</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>c</span>[2][2] =
{1,2,3,4};<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Значения в фигурных скобках в первом объявлении группируются по
строкам.</p>

<p class=P>Если для данного массива недостаточно инициализирующих значений,
оставшиеся его элементы инициализируются нулями. Таким образом, объявление</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>c</span>[2][2] =
{{1},{3,4}};<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='text-indent:0cm'>инициализировало бы <span class=Code><span
style='font-size:12.0pt'>с[0][0]</span></span> единицей, <span class=Code><span
style='font-size:12.0pt'>с[0][1]</span></span> нулем, <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>c</span></span></span><span
class=Code><span style='font-size:12.0pt'>[1][0]</span></span> тройкой и <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>c</span></span></span><span
class=Code><span style='font-size:12.0pt'>[1][1]</span></span> четверкой.</p>

<p class=P>Двумерные массивы хранятся в памяти по строкам.</p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272255"></a><a
name="_Toc265340295"></a><a name="_Toc263373066"><span style='mso-bookmark:
_Toc265340295'><span style='mso-bookmark:_Toc266272255'><span style='mso-ansi-language:
RU'>4.3. Объявление указателей</span></span></span></a><span style='mso-ansi-language:
RU'><o:p></o:p></span></p>

<p class=P>Си поддерживает два способа доступа к переменным:</p>

<p class=P>1) прямой доступ при помощи переменных, например:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>a</span>;<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span><span
class=Code><span style='font-size:12.0pt'> = 5;<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>2) косвенный доступ с использованием указателей, который и будет рассмотрен
ниже.</p>

<p class=P>Указатель – это переменная, значением которой является адрес другой
переменной. Указатель может указывать на данные любого типа.</p>

<p class=P>При объявлении переменной типа указатель необходимо явно определить
тип данных, адрес которых будет содержать эта переменная, и имя указателя
(идентификатор) с предшествующей звездочкой.</p>

<p class=P>Формат объявления указателя:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>тип_данных</span></span></span><span
class=Code><span style='font-size:12.0pt'> *идентификатор;<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Например,</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> *p1;<span
style='mso-spacerun:yes'>   </span>// указатель на переменную типа <span
class=SpellE>int</span>;<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>float</span></span></span><span
class=Code><span style='font-size:12.0pt'> *p2; // указатель на переменную типа
<span class=SpellE>float</span>;<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>char</span></span></span><span
class=Code><span style='font-size:12.0pt'> *p3;<span style='mso-spacerun:yes'> 
</span>// указатель на переменную типа <span class=SpellE>char</span>;<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Символ <span class=Code><span style='font-size:12.0pt'>*</span></span>
обязателен и идентифицирует переменную, стоящую справа от неё, как указатель.</p>

<p class=P>Следует обратить внимание на то, что при объявлении нескольких <span
class=SpellE>укзателей</span> звездочка ставится перед каждым из них.</p>

<p class=P>Например,</p>

<p class=P><span style='font-size:12.0pt;font-family:"Lucida Console"'><o:p>&nbsp;</o:p></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> *p1, *p2;<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='text-indent:0cm'>означает создание двух указателей. Если же
записать объявление так:</p>

<p class=P><span style='font-size:12.0pt;font-family:"Lucida Console"'><o:p>&nbsp;</o:p></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> *p1, p2;<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='text-indent:0cm'>то компилятор создаст один указатель (<span
class=Code><span style='font-size:12.0pt'>p1</span></span>) и одну переменную
целого типа (<span class=Code><span style='font-size:12.0pt'>p2</span></span>).</p>

<p class=P><span style='font-size:12.0pt;font-family:"Lucida Console"'><o:p>&nbsp;</o:p></span></p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272256"></a><a
name="_Toc265340296"></a><a name="_Toc263373067"><span style='mso-bookmark:
_Toc265340296'><span style='mso-bookmark:_Toc266272256'><span style='mso-ansi-language:
RU'>4.4. Операции над указателями</span></span></span></a><span
style='mso-ansi-language:RU'><o:p></o:p></span></p>

<p class=P>В Си для работы с указателями используются следующие основные <i
style='mso-bidi-font-style:normal'>операции</i>:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><b style='mso-bidi-font-weight:normal'>1) Взятие адреса<o:p></o:p></b></p>

<p class=P>Операция взятия адреса <span style='font-size:12.0pt;font-family:
"Lucida Console"'>&amp;</span> является унарной операцией, которая возвращает
адрес своего операнда. Используется также при вызове функции <span
class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>scanf</span></span>,
для сообщения ей ячейки памяти, в которую следует поместить введенное значение.</p>

<p class=P>При работе с указателями операция взятия адреса используется
следующим образом:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
*p;<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
a, c[20];<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>p = &amp;a;<o:p></o:p></span></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P>Теперь значением указателя <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>p</span></span></span> является адрес целой переменной
<span class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span>,
то есть <span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span>
указывает на <span class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span>.</p>

<p class=P>Операция взятия адреса не может применяться к константам (кроме <span
class=GramE>объявленных</span> при помощи ключевого слова <span lang=EN-US
style='mso-ansi-language:EN-US'>const</span>), а также к выражениям или к
переменным, объявленным с модификатором <span lang=EN-US style='mso-ansi-language:
EN-US'>register</span>. Например, недопустимы следующие выражения:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'>a</span>) <span
class=GramE><span class=Code><span style='font-size:12.0pt'>&amp;(</span></span></span><span
class=Code><span style='font-size:12.0pt'>a+1)</span></span><span
style='mso-bidi-font-size:14.0pt'> // попытка взять адрес выражения<o:p></o:p></span></p>

<p class=P>б) <span class=Code><span style='font-size:12.0pt'>&amp;5</span></span>
// попытка взять адрес числовой константы 5</p>

<p class=P>в) <span class=Code><span style='font-size:12.0pt'>&amp;<span
class=SpellE>c</span></span></span> // т.к. имя массива является
указателем-константой на первый элемент массива</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Последний случай (взятие адреса массива) успешно компилируется и
выполняется в <span lang=EN-US style='mso-ansi-language:EN-US'>Borland</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>C</span>++
3.1. При этом результатом взятия адреса является указатель на первый элемент
массива. Между тем, другие компиляторы могут интерпретировать подобную запись
иначе, поэтому использование этой конструкции не рекомендуется.</p>

<p class=P><b style='mso-bidi-font-weight:normal'>2) Косвенная адресация или
разыменование указателя<o:p></o:p></b></p>

<p class=P>Так как указатель содержит адрес объекта, то это дает возможность
«косвенного» доступа к этому объекту через указатель. </p>

<p class=P>Операция * называется операцией косвенной адресации. Она возвращает
значение переменной, на которую ссылается указатель.</p>

<p class=P>Например:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>x</span> = 10; //
объявление переменной целого типа и<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>           </span><span
style='mso-spacerun:yes'> </span>// её инициализация значением «10»<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> *<span class=SpellE>p</span>;<span
style='mso-spacerun:yes'>     </span>// объявление указателя на переменную
целого типа<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span><span
class=Code><span style='font-size:12.0pt'> = &amp;<span class=SpellE>x</span>;<span
style='mso-spacerun:yes'>     </span>// присваивание указателю <span
class=SpellE>p</span> адреса переменной <span class=SpellE><b style='mso-bidi-font-weight:
normal'>x</b></span><o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>*<span class=SpellE>p</span>
= 5;<span style='mso-spacerun:yes'>     </span>// присваивание переменной <span
class=SpellE><b style='mso-bidi-font-weight:normal'>x</b></span> значения 5<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>*<span class=SpellE>p</span>
= *<span class=SpellE>p</span>*2;<span style='mso-spacerun:yes'>  </span>//
присваивание переменной <span class=SpellE><b style='mso-bidi-font-weight:normal'>x</b></span>
значения 10<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=IMG><!--[if gte vml 1]><v:shape id="_x0000_i1028" type="#_x0000_t75"
 style='width:249pt;height:88.5pt'>
 <v:imagedata src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image004.png" o:title="54-1"/>
</v:shape><![endif]--><![if !vml]><img width=332 height=118
src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image005.jpg" v:shapes="_x0000_i1028"><![endif]></p>

<p class=IMG><o:p>&nbsp;</o:p></p>

<p class=P align=center style='text-align:center;text-indent:0cm'>Рис.4.3.
Указатель на переменную целого типа</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Оба оператора выводят значение переменной <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>x</span></span></span>:</p>

<p class=P style='margin-left:71.45pt;text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 71.45pt'><![if !supportLists]><span style='mso-list:Ignore'>1)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>Без
использования указателя</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>printf</span></span></span><span
class=Code><span style='font-size:12.0pt'>(“%<span class=SpellE>d</span>”, <span
class=SpellE>x</span>);<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span style='mso-spacerun:yes'>     </span>2)<span
style='mso-spacerun:yes'>  </span>С использованием указателя </p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>printf</span></span></span><span
class=Code><span style='font-size:12.0pt'>(“%<span class=SpellE>d</span>”, *<span
class=SpellE>p</span>);<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>К указателям может применяться определенный набор арифметических
операций. В качестве примера определим массив <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>a</span>[10]</span></span>,
первый элемент которого будет иметь адрес в памяти, равный 3000. Инициализируем
указатель <span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span>
значением адреса элемента <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>a</span></span></span><span class=Code><span
style='font-size:12.0pt'>[0]</span></span>, т.е. значение <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>p</span></span></span> равно 3000.
Этот пример изображен на рис.4.3.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>a</span>[10];<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> *p1,*<span class=SpellE>p</span>;<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span><span
class=Code><span style='font-size:12.0pt'> = &amp;<span class=SpellE>a</span>[0];<o:p></o:p></span></span></p>

<p class=P><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=IMG><!--[if gte vml 1]><v:shape id="_x0000_i1029" type="#_x0000_t75"
 style='width:390.75pt;height:159pt'>
 <v:imagedata src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image006.png" o:title="54-2"/>
</v:shape><![endif]--><![if !vml]><img width=521 height=212
src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image007.jpg" v:shapes="_x0000_i1029"><![endif]></p>

<p class=IMG><o:p>&nbsp;</o:p></p>

<p class=P align=center style='text-align:center;text-indent:0cm'>Рис. 4.4.
Массив <span class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span><span
class=Code><span style='font-size:12.0pt'>[]</span></span> и указатель <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span>,
ссылающийся на <span class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><b style='mso-bidi-font-weight:normal'>3) Увеличение или уменьшение
значения указателя на целое число<o:p></o:p></b></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span><span
class=Code><span style='font-size:12.0pt'> = <span class=SpellE>p</span> + <span
class=SpellE>i</span></span></span> или <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>p</span></span></span><span class=Code><span
style='font-size:12.0pt'> = <span class=SpellE>p</span> - <span class=SpellE>i</span></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>В арифметике указателей при прибавлении или вычитании из указателя
целого числа значение его увеличивается или уменьшается не на это число, а на
произведение числа на размер объекта (переменной), на который указывает <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span>,
т<span class=GramE>.е</span><span style='mso-spacerun:yes'>  </span>на <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>i</span></span></span><span
class=Code><span style='font-size:12.0pt'>*(<span class=SpellE>sizeof</span>
(тип))</span></span>, где тип – это тип данных на которые указывает <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span>.</p>

<p class=P>Например:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> *<span class=SpellE>p</span>;<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>p=&amp;a</span></span></span><span
class=Code><span style='font-size:12.0pt'>[0];<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>p=p+5;<span
style='mso-spacerun:yes'>   </span>// значение указателя <span class=SpellE>p</span>
увеличивается <span class=GramE>на</span><o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>         </span>// 5*<span class=SpellE>sizeof</span>(<span
class=SpellE>int</span>) = 10,<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>         </span>// т.е. <span class=SpellE><b
style='mso-bidi-font-weight:normal'>p</b></span> теперь указывает на 6-ой
элемент<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>         </span>// массива <span class=SpellE><b
style='mso-bidi-font-weight:normal'>a</b></span>;<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Соответственно с указателями можно использовать операции инкремента
и декремента.</p>

<p class=P><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>p++</span></span></span><span
class=Code><span style='font-size:12.0pt'>;<span style='mso-spacerun:yes'>  
</span>// Установить указатель на переменную, следующую <span class=GramE>за</span><o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>       </span>// той, на которую указатель указывает в
данный момент<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span><span
class=Code><span style='font-size:12.0pt'>--;<span style='mso-spacerun:yes'>  
</span>// Установить указатель на переменную, предшествующую<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>       </span>// той, на которую указатель указывает в
данный момент<o:p></o:p></span></span></p>

<p class=P><span style='color:black;layout-grid-mode:line'><o:p>&nbsp;</o:p></span></p>

<p class=P>Таким образом, физическое увеличение или уменьшение указателя
зависит от типа указателя, то есть от размера элемента данных и ячейки памяти,
на которую указывает указатель.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><b style='mso-bidi-font-weight:normal'><span style='color:black'>4)
Разность указателей<o:p></o:p></span></b></p>

<p class=P>Данная операция имеет смысл только тогда, когда указатели ссылаются
на элементы одного и того же массива.</p>

<p class=P>Например<span lang=EN-US style='mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
x;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>p1=&amp;<span class=GramE>a[</span>0];<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>p2=&amp;<span class=GramE>a[</span>5];<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>x=p2-p1;<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Разность двух указателей равна разности их значений, поделенной на <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>sizeof</span></span></span><span
class=Code><span style='font-size:12.0pt'> (тип)</span></span>, т.е. <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>x=</span></span></span><span
class=Code><span style='font-size:12.0pt'>(3010-3000)/2=5</span></span> (см.
рис.4.4). Переменной <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>x</span></span></span> будет присвоено число элементов
массива, расположенных, начиная с адреса <span class=Code><span
style='font-size:12.0pt'>p1</span></span> и до <span class=Code><span
style='font-size:12.0pt'>p2</span></span>, в данном случае это 5.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><b style='mso-bidi-font-weight:normal'>5) Сравнение указателей<o:p></o:p></b></p>

<p class=P>Указатели могут сравниваться друг с другом при помощи операций
отношения, но сравнение указателей обычно не имеет смысла, если они не
ссылаются на элементы одного и того же массива. При сравнении указателей
сравниваются адреса, являющиеся значениями указателей. Сравнение двух
указателей, ссылающихся на элементы одного и того же массива, могло бы
показать, например, что один указатель ссылается на элемент с большим значением
индекса, чем другой указатель.</p>

<p class=P><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>p1=&amp;<span class=GramE>c[</span>0];<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>p2=&amp;<span class=GramE>c[</span>5];<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>if</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
(p1&gt;p2)</span></span><span lang=EN-US style='color:black;mso-ansi-language:
EN-US'> – </span><span style='color:black'>ложь</span><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=P><span lang=EN-US style='color:black;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P><span style='color:black'>Любой указатель можно проверять на
равенство или неравенство </span><span lang=EN-US style='color:black;
mso-ansi-language:EN-US'>NULL</span><span style='color:black'> или 0. Указатель
</span><span lang=EN-US style='color:black;mso-ansi-language:EN-US'>NULL</span><span
style='color:black'> совместим с указателем на любой тип и уникален (т.е.
никаких объектов, расположенных по нулевому адресу быть не может).<o:p></o:p></span></p>

<p class=P><span style='color:black'>Пусть, например, объявлен указатель </span><span
class=Code><span style='font-size:12.0pt'>*<span class=SpellE>p</span></span></span><span
style='color:black'>.<o:p></o:p></span></p>

<p class=P><span style='color:black'>Выражение </span><span class=Code><span
style='font-size:12.0pt'>p!=0</span></span><span style='color:black'>
эквивалентно выражению </span><span class=SpellE><span class=Code><span
style='font-size:12.0pt'>p!=NULL</span></span></span><span style='color:black'>.<o:p></o:p></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><b style='mso-bidi-font-weight:normal'>6) Присваивание указателей
друг другу<o:p></o:p></b></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>p1 = <span
class=SpellE>p</span>; // содержимое <span class=SpellE>p</span> копируется в
p1, т.е. p1 теперь<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>        </span>// указывает на тот же элемент массива
либо<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>        </span>// переменную, что и <span
class=SpellE>p</span><o:p></o:p></span></span></p>

<p class=P>Указатель может быть присвоен другому указателю, если оба указателя
имеют один и тот же тип. В противном случае нужно использовать операцию
приведения типа. Исключением является указатель типа <span lang=EN-US
style='mso-ansi-language:EN-US'>void</span>. </p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272257"></a><a
name="_Toc265340297"></a><a name="_Toc263373068"><span style='mso-bookmark:
_Toc265340297'><span style='mso-bookmark:_Toc266272257'><span style='mso-ansi-language:
RU'>4.5. Тип </span><span lang=EN-US>void</span></span></span></a><span
style='mso-bookmark:_Toc266272257'></span><span style='mso-bookmark:_Toc265340297'></span><span
style='mso-bookmark:_Toc263373068'></span><span style='mso-ansi-language:RU'><o:p></o:p></span></p>

<p class=P>Ключевое слово <span lang=EN-US style='mso-ansi-language:EN-US'>void</span>
говорит об отсутствии информации о размере элемента данных в памяти.</p>

<p class=P>Практическое значение имеет только понятие указателя на тип данных <span
lang=EN-US style='mso-ansi-language:EN-US'>void</span>. Все остальные применения
этого ключевого слова носят скорее синтаксическую нагрузку.</p>

<p class=P>Объявление указателя типа <span lang=EN-US style='mso-ansi-language:
EN-US'>void</span>:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>void</span></span></span><span
class=Code><span style='font-size:12.0pt'> *<span class=SpellE>p</span>;<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Такому указателю может быть присвоен указатель на любой тип, и наоборот.
В обоих случаях применение операции приведения типа не требуется.</p>

<p class=P>Над указателем типа <span lang=EN-US style='mso-ansi-language:EN-US'>void</span>
нельзя выполнить операцию косвенной адресации (разыменования) без явного
приведения типа, так как компилятор не знает размер типа данных, т.е. число
байт, участвующих в операции.</p>

<p class=P>Например<span lang=EN-US style='mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>unsigned</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> a
= 0x1234;<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
*p = &amp;a;<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>char</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
b;<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>unsigned</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
c;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>b = *(char *<span class=GramE>)p</span>;<span
style='mso-spacerun:yes'>     </span>// </span></span><span class=Code><span
style='font-size:12.0pt'>Приводит</span></span><span class=Code><span
style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>указатель</span></span><span
class=Code><span style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>типа</span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> void </span></span><span
class=Code><span style='font-size:12.0pt'>к</span></span><span class=Code><span
style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>типу</span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>                   
</span></span></span><span class=Code><span style='font-size:12.0pt'>// <span
class=SpellE>char</span> и присваивает <span class=SpellE>b</span> значение<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>                    </span>// переменной, на которую
он указывает<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>printf</span></span></span><span
class=Code><span style='font-size:12.0pt'>(&quot;%.2</span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>x</span></span><span
class=Code><span style='font-size:12.0pt'>\<span class=SpellE>n</span>&quot;, <span
class=SpellE>b</span>); // Выводит 34<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>c = *(unsigned *<span class=GramE>)p</span>;<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>printf</span></span></span></span><span
class=GramE><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>(</span></span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>&quot;%.4x\n&quot;,
c); // </span></span><span class=Code><span style='font-size:12.0pt'>Выводит</span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
1234<o:p></o:p></span></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P>Строка формата <span class=Code><span style='font-size:12.0pt'>&quot;%.2</span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>x</span></span><span
class=Code><span style='font-size:12.0pt'>\</span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>n</span></span><span
class=Code><span style='font-size:12.0pt'>&quot;</span></span> означает, что
число будет выведено в его <span class=SpellE>шестнадцатиричном</span>
представлении с двумя знаками. В случае<span class=GramE>,</span> если число
представимо меньшим количеством цифр, оно будет дополнено слева нулями до
заданной длины. Аналогично <span class=Code><span style='font-size:12.0pt'>&quot;%.4</span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>x</span></span><span
class=Code><span style='font-size:12.0pt'>\</span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>n</span></span><span
class=Code><span style='font-size:12.0pt'>&quot;</span></span> означает вывод <span
class=SpellE>шестнадцатиричного</span> числа с 4 знаками. Более подробную
информацию о строке формата, например <span class=Code><span style='font-size:
12.0pt'>&quot;%.4</span></span><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>x</span></span><span
class=Code><span style='font-size:12.0pt'>\</span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>n</span></span><span
class=Code><span style='font-size:12.0pt'>&quot;</span></span>, можно получить
в справочной системе среды программирования.</p>

<p class=P>Перед использованием указателя на <span lang=EN-US style='mso-ansi-language:
EN-US'>void</span> в адресной арифметике он также должен быть приведен к
нужному типу операцией приведения типа.</p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272258"></a><a
name="_Toc265340298"></a><a name="_Toc263373069"><span style='mso-bookmark:
_Toc265340298'><span style='mso-bookmark:_Toc266272258'><span style='mso-ansi-language:
RU'>4.6. Связь между указателями и массивами</span></span></span></a><span
style='mso-ansi-language:RU'><o:p></o:p></span></p>

<p class=P>В Си массивы и указатели тесно связаны между собой и являются практически
взаимозаменяемыми.</p>

<p class=P>Имя массива является указателем-константой на первый элемент массива.</p>

<p class=P>Объявим переменные:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>a</span>[5];<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> *<span class=SpellE>p</span>;<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Можно присвоить указателю адрес первого элемента массива двумя способами:
</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span><span
class=Code><span style='font-size:12.0pt'> = <span class=SpellE>a</span>;<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span><span
class=Code><span style='font-size:12.0pt'> = &amp;<span class=SpellE>a</span>[0];<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Есть несколько <i style='mso-bidi-font-style:normal'>способов
доступа к элементам массива</i>.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='margin-left:71.45pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 71.45pt'><![if !supportLists]><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>Обычный
способ, через указание имени массива и индекса, например, <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>a</span></span></span><span
class=Code><span style='font-size:12.0pt'>[3]</span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='margin-left:71.45pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 71.45pt'><![if !supportLists]><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>Способ
указатель/смещение: например, <span class=Code><span style='font-size:12.0pt'>*(<span
class=SpellE>p</span> + 3)</span></span>. Константа 3 называется смещением и
показывает, на какой элемент массива производится ссылка, т.е. значение
смещения равно значению индекса массива. В выражении используются скобки, так
как приоритет операции <span class=Code><span style='font-size:12.0pt'>*</span></span>
выше, чем операции <span class=Code><span style='font-size:12.0pt'>+</span></span>.
В случае без скобок в выражении <span class=Code><span style='font-size:12.0pt'>*p+3</span></span>
к значению <span class=Code><span style='font-size:12.0pt'>*<span class=SpellE>p</span></span></span><span
style='mso-spacerun:yes'>  </span>прибавляется число 3 (в данном случае к
значению элемента <span class=SpellE><span class=Code><span style='font-size:
12.0pt'>a</span></span></span><span class=Code><span style='font-size:12.0pt'>[0]</span></span>
будет прибавлено 3).</p>

<p class=P>Для того чтобы перемещаться по массиву, можно использовать операции
инкремента и декремента. Операция</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>*(<span
class=SpellE>p++</span>)<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:list 0cm'><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=P style='text-indent:0cm'>получает значение переменной по адресу <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span>
и устанавливает указатель <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>p</span></span></span> на следующий элемент массива.
Операция</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>*(--<span
class=SpellE>p</span>)<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='text-indent:0cm'>перемещает указатель к предыдущему элементу
массива и получает значение этого элемента.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='margin-left:71.45pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 71.45pt'><![if !supportLists]><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>Имя
массива (т.к. является указателем) можно использовать в арифметике указателей.
Например, выражение <span class=Code><span style='font-size:12.0pt'>*(a+3)</span></span><span
style='mso-spacerun:yes'>  </span>будет ссылаться на элемент массива <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span><span
class=Code><span style='font-size:12.0pt'>[3]</span></span>.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='margin-left:71.45pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 71.45pt'><![if !supportLists]><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>Указатели,
в свою очередь, могут быть использованы вместо имен массива. Если, <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>p=&amp;a</span></span></span><span
class=Code><span style='font-size:12.0pt'>[0]</span></span>, то <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span><span
class=Code><span style='font-size:12.0pt'>[1]</span></span> и <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span><span
class=Code><span style='font-size:12.0pt'>[1]</span></span> обращаются к одной
и той же ячейке памяти.</p>

<p class=P>Выражение <span class=Code><span style='font-size:12.0pt'>a+=3</span></span>
является недопустимым, так как имя массива – это указатель-константа, <span
class=GramE>которая</span> всегда указывает на первый элемент массива. А здесь
делается попытка изменить значение начального адреса массива.</p>

<p class=P>Объявим двумерный массив:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>a</span>[3][3];<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Выражения <span class=GramE>наподобие</span> <span class=Code><span
style='font-size:12.0pt'>а[0]</span></span>, <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>a</span></span></span><span
class=Code><span style='font-size:12.0pt'>[1]</span></span>, <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span><span
class=Code><span style='font-size:12.0pt'>[2]</span></span> <span class=GramE>при</span>
компиляции заменяются адресами первых элементов соответственно первой, второй и
третьей строк массива, <span lang=EN-US style='mso-ansi-language:EN-US'>a</span></p>

<p class=P><span style='mso-spacerun:yes'>   </span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>a[0]-&gt;<span style='mso-spacerun:yes'>   
</span>a[0][0]<span style='mso-tab-count:1'>  </span>a[0][1]<span
style='mso-tab-count:1'>  </span>a[0][2]<span style='mso-tab-count:1'>  </span><o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>a[1]-&gt;<span style='mso-spacerun:yes'>   
</span>a[1][0]<span style='mso-tab-count:1'>  </span>a[1][1]<span
style='mso-tab-count:1'>  </span>a[1][2] <o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>a[2]-&gt;<span style='mso-spacerun:yes'>   
</span>a[2][0]<span style='mso-tab-count:1'>  </span>a[2][1]<span
style='mso-tab-count:1'>  </span>a[2][2] <o:p></o:p></span></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P>Очевидны следующие равенства:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P align=left style='text-align:left'><span class=SpellE><span
class=Code><span style='font-size:10.5pt'>a</span></span></span><span
class=Code><span style='font-size:10.5pt'>[<span class=SpellE>i</span>]+<span
class=SpellE>j</span> == &amp;<span class=SpellE>a</span>[<span class=SpellE>i</span>][<span
class=SpellE>j</span>]; // адрес <b style='mso-bidi-font-weight:normal'>j</b>-го
элемента <b style='mso-bidi-font-weight:normal'>i</b>-строки массива<o:p></o:p></span></span></p>

<p class=P align=left style='text-align:left'><span class=Code><span
style='font-size:10.5pt'>*(<span class=SpellE>a</span>[<span class=SpellE>i</span>]+<span
class=SpellE>j</span>) == <span class=SpellE>a</span>[<span class=SpellE>i</span>][<span
class=SpellE>j</span>]; // содержимое <b style='mso-bidi-font-weight:normal'>j</b>-го
элемента <b style='mso-bidi-font-weight:normal'>i</b>-ой строки массива<o:p></o:p></span></span></p>

<p class=P align=left style='text-align:left'><span class=Code><span
style='font-size:10.5pt'>*(*(<span class=SpellE>a+i</span>)+<span class=SpellE>j</span>)
== <span class=SpellE>a</span>[<span class=SpellE>i</span>][<span class=SpellE>j</span>];
// содержимое <b style='mso-bidi-font-weight:normal'>j</b>-го элемента <b
style='mso-bidi-font-weight:normal'>i</b>-ой строки массива<o:p></o:p></span></span></p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272259"></a><a
name="_Toc265340299"></a><a name="_Toc263373070"><span style='mso-bookmark:
_Toc265340299'><span style='mso-bookmark:_Toc266272259'><span style='mso-ansi-language:
RU'>4.7. Динамическое распределение памяти</span></span></span></a><span
style='mso-ansi-language:RU'><o:p></o:p></span></p>

<p class=P>Для динамического распределения памяти применяются функции <span
class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>malloc</span></span>()
и <span lang=EN-US style='mso-ansi-language:EN-US'>free</span>(). Их прототипы
находятся в файле &lt;<span class=SpellE><span lang=EN-US style='mso-ansi-language:
EN-US'>stdlib</span></span>.<span lang=EN-US style='mso-ansi-language:EN-US'>h</span>&gt;.
</p>

<p class=P>Прототип функции <span class=SpellE><span lang=EN-US
style='mso-ansi-language:EN-US'>malloc</span></span>():</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>void</span></span></span><span
class=Code><span style='font-size:12.0pt'> *<span class=SpellE>malloc</span>(<span
class=SpellE>unsigned</span> <span class=SpellE>s</span>);<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Функция возвращает указатель типа <span lang=EN-US style='mso-ansi-language:
EN-US'>void</span> на блок выделенной памяти длиной <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>s</span></span></span> байт. Если
необходимого количества памяти нет в наличии – возвращает <span lang=EN-US
style='mso-ansi-language:EN-US'>NULL</span>.</p>

<p class=P>Например: </p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>char</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
*p;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>p = (char *) <span class=SpellE><span class=GramE>malloc</span></span><span
class=GramE>(</span>1000); // </span></span><span class=Code><span
style='font-size:12.0pt'>выделяет</span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> 1000 </span></span><span
class=Code><span style='font-size:12.0pt'>байт</span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P>Функция <span lang=EN-US style='mso-ansi-language:EN-US'>free</span>()
освобождает память, то есть память возвращается системе и в дальнейшем её можно
выделить снова. Для высвобождения памяти, динамически выделенной ранее,
используется функция <span lang=EN-US style='mso-ansi-language:EN-US'>free</span>().
Её прототип:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>void</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>free</span>(<span
class=SpellE>void</span> *<span class=SpellE>p</span>);<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>То есть, чтобы освободить память, выделенную в предыдущем примере,
нужно написать </p>

<p class=P><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>free</span></span></span><span
class=Code><span style='font-size:12.0pt'>(<span class=SpellE>p</span>);<o:p></o:p></span></span></p>

<p class=P><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=P><span style='color:black'>При динамическом распределении памяти для
массивов следует описать указатель соответствующего типа и присвоить ему
значение при помощи функции <span class=SpellE>calloc</span>. Вот прототип этой
функции:<o:p></o:p></span></p>

<p class=P><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>void</span></span></span><span
class=Code><span style='font-size:12.0pt'> *<span class=SpellE>calloc</span>(<span
class=SpellE>unsigned</span> <span class=SpellE>n</span>, <span class=SpellE>unsigned</span>
<span class=SpellE>m</span>);<o:p></o:p></span></span></p>

<p class=P><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=P>Функция<span style='color:black'> принимает два аргумента: число
элементов <span class=SpellE>n</span> и размер каждого элемента <span
class=SpellE>m</span>, инициализирует выделенный блок памяти нулями и возвращает
указатель на его начало<span class=GramE> Е</span>сли по каким-либо причинам
(например, в случае нехватки физической памяти) память не может быть выделена,
возвращается NULL.<o:p></o:p></span></p>

<p class=P>Одномерный массив <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>a</span></span></span><span class=Code><span
style='font-size:12.0pt'>[10]</span></span> из элементов типа <span
class=SpellE>float</span> можно создать следующим образом </p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>float</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
*a;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>a = (float *) <span class=SpellE><span class=GramE>calloc</span></span><span
class=GramE>(</span>10,sizeof(float));<o:p></o:p></span></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P>Для динамического создания двумерного массива вначале нужно
распределить память для массива указателей на одномерные массивы, а затем
распределять память для одномерных массивов. Пусть, например, требуется создать
массив <span class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span><span
class=Code><span style='font-size:12.0pt'>[<span class=SpellE>m</span>][<span
class=SpellE>n</span>]</span></span>. Это можно сделать при помощи следующего
фрагмента программы: </p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>#include &lt;<span class=SpellE>stdlib.h</span>&gt;<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
main()<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>double</span> **a;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>n,m,i</span>;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>scanf</span></span><span class=GramE>(</span>&quot;%d
%<span class=SpellE>d&quot;,&amp;m,&amp;n</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span>a = (double
**) <span class=SpellE><span class=GramE>calloc</span></span><span class=GramE>(</span><span
class=SpellE>m,sizeof</span>(double *));<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>for</span> (<span class=SpellE>i</span> = 0; <span class=SpellE>i</span>
&lt; m; <span class=SpellE>i</span>++)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>    </span><span
class=GramE>a[</span><span class=SpellE>i</span>] = (double *) <span
class=SpellE>calloc</span>(n, <span class=SpellE>sizeof</span> (double));<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=P><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=P>Функция <span class=SpellE><span lang=EN-US style='mso-ansi-language:
EN-US'>realloc</span></span> изменяет размер объекта, выделенного в результате
предыдущего вызова <span class=SpellE><span lang=EN-US style='mso-ansi-language:
EN-US'>malloc</span></span>, <span class=SpellE><span lang=EN-US
style='mso-ansi-language:EN-US'>calloc</span></span> или <span class=SpellE><span
lang=EN-US style='mso-ansi-language:EN-US'>realloc</span></span>. Содержимое
первоначального объекта сохраняется при условии, что размер вновь выделяемой
памяти больше, чем первоначальный. В противном случае содержимое остается
неизменным лишь в пределах размера нового объекта. Прототип функции <span
class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>realloc</span></span>
выглядит следующим образом:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>void</span></span></span><span
class=Code><span style='font-size:12.0pt'> *<span class=SpellE>realloc</span>(<span
class=SpellE>void</span> *<span class=SpellE>ptr</span>, <span class=SpellE>unsigned</span>
<span class=SpellE>size</span>);<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Функция <span class=SpellE><span lang=EN-US style='mso-ansi-language:
EN-US'>realloc</span></span> принимает два <span class=SpellE>аргумета</span>:
указатель на первоначальный объект (<span class=SpellE><span class=Code><span
style='font-size:12.0pt'>ptr</span></span></span>) и новый размер объекта (<span
class=SpellE><span class=Code><span style='font-size:12.0pt'>size</span></span></span>).
Если <span class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>ptr</span></span>
равен <span lang=EN-US style='mso-ansi-language:EN-US'>NULL</span>, <span
class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>realloc</span></span>
работает аналогично <span class=SpellE><span lang=EN-US style='mso-ansi-language:
EN-US'>malloc</span></span>. Если <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>size</span></span></span> <span class=GramE>равен</span>
0, а <span class=SpellE><span class=Code><span style='font-size:12.0pt'>ptr</span></span></span>
не <span lang=EN-US style='mso-ansi-language:EN-US'>NULL</span>, память,
выделенная для объекта, освобождается. В противном случае, если <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>ptr</span></span></span>
не <span lang=EN-US style='mso-ansi-language:EN-US'>NULL</span> и размер больше
нуля, <span class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>realloc</span></span>
пытается выделить для объекта новый блок памяти. Функция <span class=SpellE><span
lang=EN-US style='mso-ansi-language:EN-US'>realloc</span></span> возвращает
либо указатель на вновь выделенную память, либо <span lang=EN-US
style='mso-ansi-language:EN-US'>NULL</span>.</p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272260"></a><a
name="_Toc265340300"></a><a name="_Toc263373071"><span style='mso-bookmark:
_Toc265340300'><span style='mso-bookmark:_Toc266272260'><span style='mso-ansi-language:
RU'>4.8. Массивы указателей</span></span></span></a><span style='mso-ansi-language:
RU'><o:p></o:p></span></p>

<p class=P>Массивы могут состоять из указателей. Обычный случай такого массива
– это массив строк. Элементом такого массива является строка. В качестве
примера рассмотрим массив <span lang=EN-US style='mso-ansi-language:EN-US'>name</span>,
который может быть использован для хранения имен.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>char</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
*name[4] = {“<span class=SpellE>Nata”,”<st1:place w:st="on">Lena</st1:place>”,”Masha”,”Katya</span>”};<o:p></o:p></span></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P>Выражение <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>name</span></span></span><span class=Code><span
style='font-size:12.0pt'>[4]</span></span> в объявлении означает массив из
четырех элементов. Элементами данного массива будут являться указатели на тип <span
lang=EN-US style='mso-ansi-language:EN-US'>char</span>. Каждый указатель
инициализируется адресом строки, указанной в фигурных скобках.</p>

<p class=P>Каждое из значений переменной-указателя (“<span class=SpellE><span
lang=EN-US style='mso-ansi-language:EN-US'>Nata</span></span>”,”<span
lang=EN-US style='mso-ansi-language:EN-US'>Lena</span>” и т.д.) хранится в
памяти как строка символов с конечным нулевым символом. </p>

<p class=P>В <span class=SpellE><span class=Code><span style='font-size:12.0pt'>name</span></span></span><span
class=Code><span style='font-size:12.0pt'>[0]</span></span> содержится адрес “<span
class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>Nata</span></span>”.</p>

<p class=P>Для хранения тех же данных мы могли использовать двумерный массив.
При таком подходе все строки должны быть одинаковой длины, равной размеру самой
длинной строки символов. Это привело бы к неоправданному расходу памяти в
случае, когда большинство сохраняемых строк короче, чем самая длинная строка.
Также преимущество массива указателей состоит в том, что можно работать не с
самими строками, а с их адресами, что дает выигрыш во времени.</p>

<p class=P>Следующие объявления переменных </p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>a</span>[] =
{10,11,12,13,14,}; // массив целых чисел<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
*p[] = {a, a+1, a+2, a+2, a+3, a+4}; // </span></span><span class=Code><span
style='font-size:12.0pt'>массив</span></span><span class=Code><span
style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>указателей</span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>                                         </span></span></span><span
class=Code><span style='font-size:12.0pt'>// на целые числа<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> **<span class=SpellE>pp</span> = <span
class=SpellE>p</span>;<span style='mso-spacerun:yes'>               
</span>//указатель на указатель<o:p></o:p></span></span></p>

<p class=P style='text-indent:0cm'><span style='color:black'>порождают
программные объекты, представленные на схеме рис.4.5. <o:p></o:p></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=IMG><span style='color:black'><!--[if gte vml 1]><v:shape id="_x0000_i1030"
 type="#_x0000_t75" style='width:294pt;height:70.5pt'>
 <v:imagedata src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image008.gif" o:title="68"/>
</v:shape><![endif]--><![if !vml]><img width=392 height=94
src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image008.gif" v:shapes="_x0000_i1030"><![endif]><o:p></o:p></span></p>

<p class=IMG><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=P align=center style='text-align:center;text-indent:0cm'><span
style='color:black'>Рис.4.5. Схема размещения переменных при объявлении</span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>При выполнении операции <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>pp-p</span></span></span> получим нулевое значение,
так как ссылки <span class=SpellE><span class=Code><span style='font-size:12.0pt'>pp</span></span></span>
и <span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span>
равны и указывают на начальный элемент массива указателей, связанного с
указателем <span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span>
(на элемент <span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span><span
class=Code><span style='font-size:12.0pt'>[0]</span></span>).</p>

<p class=P>После выполнения операции <span class=Code><span style='font-size:
12.0pt'>pp+=2</span></span> схема изменится и примет вид, изображенный на
рис.4.6.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=IMG><!--[if gte vml 1]><v:shape id="_x0000_i1031" type="#_x0000_t75"
 style='width:395.25pt;height:69.75pt'>
 <v:imagedata src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image009.gif" o:title="68-2"/>
</v:shape><![endif]--><![if !vml]><img width=527 height=93
src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image009.gif" v:shapes="_x0000_i1031"><![endif]></p>

<p class=IMG><o:p>&nbsp;</o:p></p>

<p class=P align=center style='text-align:center;text-indent:0cm'>Рис.4.6.
Схема размещения переменных после выполнения операции <span class=Code><span
style='font-size:12.0pt'>pp+=2</span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Результатом выполнения вычитания <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>pp-p</span></span></span> будет 2,
так как значение <span class=SpellE><span class=Code><span style='font-size:
12.0pt'>pp</span></span></span> есть адрес третьего элемента массива <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span>.
Ссылка <span class=Code><span style='font-size:12.0pt'>*<span class=SpellE>pp-a</span></span></span>
тоже дает значение 2, так как обращение <span class=Code><span
style='font-size:12.0pt'>*<span class=SpellE>pp</span></span></span> есть адрес
третьего элемента массива <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>a</span></span></span>, а обращение <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span>
есть адрес начального элемента массива <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>a</span></span></span>. При обращении с помощью ссылки
<span class=Code><span style='font-size:12.0pt'>**<span class=SpellE>pp</span></span></span>
получим 12 - это значение третьего элемента массива <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>a</span></span></span>. Ссылка <span
class=Code><span style='font-size:12.0pt'>*<span class=SpellE>pp++</span></span></span>
даст значение четвертого элемента массива <span class=SpellE><span class=GramE><span
class=Code><span style='font-size:12.0pt'>p</span></span></span></span> т.е.
адрес четвертого элемента массива <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>a</span></span></span>. </p>

<p class=P>Если считать, что <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>pp=p</span></span></span>, то обращение <span
class=Code><span style='font-size:12.0pt'>*++<span class=SpellE>pp</span></span></span>
это значение второго элемента массива <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>a</span></span></span> (т.е. значение 11), операция <span
class=Code><span style='font-size:12.0pt'>++*<span class=SpellE>pp</span></span></span>
изменит содержимое указателя <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>p</span></span></span><span class=Code><span
style='font-size:12.0pt'>[0]</span></span>, таким образом, что он станет равным
значению адреса элемента <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>a</span></span></span><span class=Code><span
style='font-size:12.0pt'>[1]</span></span>. </p>

<p class=P>Сложные обращения раскрываются изнутри. Например, обращение <span
class=Code><span style='font-size:12.0pt'>*(++(*<span class=SpellE>pp</span>))</span></span>
можно разбить на следующие действия: <span class=Code><span style='font-size:
12.0pt'>*<span class=SpellE>pp</span></span></span> дает значение начального элемента
массива <span class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span><span
class=Code><span style='font-size:12.0pt'>[0]</span></span>, далее это значение
<span class=SpellE>инкременируется</span> <span class=Code><span
style='font-size:12.0pt'>++(*<span class=SpellE>p</span>)</span></span>, в
результате чего указатель <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>p</span></span></span><span class=Code><span
style='font-size:12.0pt'>[0]</span></span> станет равен значению адреса
элемента <span class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span><span
class=Code><span style='font-size:12.0pt'>[1]</span></span>, и последнее
действие это выборка значения по полученному адресу, т.е. значение 11. </p>

<p class=P>Объявление переменных</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>a</span>[3][3] =
{<span style='mso-spacerun:yes'>  </span><span class=GramE>{ </span>11,12,13 },<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>                 </span>{ 21,22,23<span class=GramE> }</span>,<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>                 </span>{ 31,32,33<span class=GramE> }</span><span
style='mso-spacerun:yes'>   </span>};<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> *<span class=SpellE>pa</span>[3] = <span
class=GramE>{ </span><span class=SpellE>a</span>, <span class=SpellE>a</span>[1],
<span class=SpellE>a</span>[2] };<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> *<span class=SpellE>p</span> = <span
class=SpellE>a</span>[0];<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P style='text-indent:0cm'>порождает в программе объекты,
представленные на схеме рис.4.7. </p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=IMG><!--[if gte vml 1]><v:shape id="_x0000_i1026" type="#_x0000_t75"
 style='width:132pt;height:1in'>
 <v:imagedata src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image010.png" o:title="62"/>
</v:shape><![endif]--><![if !vml]><img width=176 height=96
src="4%20МАССИВЫ%20И%20УКАЗАТЕЛИ.files/image011.gif" v:shapes="_x0000_i1026"><![endif]></p>

<p class=IMG><o:p>&nbsp;</o:p></p>

<p class=P align=center style='text-align:center;text-indent:0cm'>Рис.4.7.
Схема размещения указателей на двумерный массив</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Согласно этой схеме доступ к элементу <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>a</span></span></span><span
class=Code><span style='font-size:12.0pt'>[0][0]</span></span> можно получить
по указателям <span class=SpellE><span class=Code><span style='font-size:12.0pt'>a</span></span></span>,
<span class=SpellE><span class=Code><span style='font-size:12.0pt'>path</span></span></span>,
<span class=SpellE><span class=Code><span style='font-size:12.0pt'>pa</span></span></span>
при помощи следующих ссылок: <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>a</span></span></span><span class=Code><span
style='font-size:12.0pt'>[0][0]</span></span>, <span class=Code><span
style='font-size:12.0pt'>*<span class=SpellE>a</span></span></span>, <span
class=Code><span style='font-size:12.0pt'>**<span class=SpellE>a</span>[0]</span></span>,
<span class=Code><span style='font-size:12.0pt'>*<span class=SpellE>p</span></span></span>,
<span class=Code><span style='font-size:12.0pt'>**<span class=SpellE>pa</span></span></span>,
<span class=Code><span style='font-size:12.0pt'>*<span class=SpellE>p</span>[0]</span></span>.
</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
