<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="5%20ФУНКЦИИ.files/filelist.xml">
<link rel=Edit-Time-Data href="5%20ФУНКЦИИ.files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>5. Функции</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>user</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>user</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2011-03-30T14:01:00Z</o:Created>
  <o:LastSaved>2011-03-30T14:01:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>2559</o:Words>
  <o:Characters>14592</o:Characters>
  <o:Lines>121</o:Lines>
  <o:Paragraphs>34</o:Paragraphs>
  <o:CharactersWithSpaces>17117</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Lucida Console";
	panose-1:2 11 6 9 4 5 4 2 2 4;
	mso-font-charset:204;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482993 6144 0 0 31 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;}
h2
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:14.0pt;
	font-family:Arial;
	font-style:italic;}
h3
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:13.0pt;
	font-family:Arial;}
p.H1, li.H1, div.H1
	{mso-style-name:_H1;
	mso-style-parent:"Заголовок 1";
	mso-style-link:"_H1 Знак";
	margin-top:18.0pt;
	margin-right:0cm;
	margin-bottom:18.0pt;
	margin-left:0cm;
	text-align:center;
	page-break-before:always;
	mso-pagination:no-line-numbers;
	mso-outline-level:1;
	font-size:20.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	text-transform:uppercase;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.P, li.P, div.P
	{mso-style-name:_P;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:35.45pt;
	mso-pagination:none;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.Code
	{mso-style-name:_Code;
	mso-style-parent:"";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Lucida Console";
	mso-ascii-font-family:"Lucida Console";
	mso-hansi-font-family:"Lucida Console";}
p.H2, li.H2, div.H2
	{mso-style-name:_H2;
	mso-style-parent:"Заголовок 2";
	margin-top:18.0pt;
	margin-right:0cm;
	margin-bottom:18.0pt;
	margin-left:0cm;
	text-align:center;
	mso-pagination:none;
	page-break-after:avoid;
	mso-outline-level:2;
	mso-hyphenate:none;
	font-size:18.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	text-transform:uppercase;
	mso-ansi-language:EN-US;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.IMG, li.IMG, div.IMG
	{mso-style-name:_IMG;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:none;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.H3, li.H3, div.H3
	{mso-style-name:_H3;
	mso-style-parent:"Заголовок 3";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:12.0pt;
	margin-left:0cm;
	text-align:center;
	mso-pagination:none;
	page-break-after:avoid;
	mso-outline-level:3;
	mso-hyphenate:none;
	font-size:16.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
span.H10
	{mso-style-name:"_H1 Знак";
	mso-style-locked:yes;
	mso-style-parent:"";
	mso-style-link:_H1;
	mso-ansi-font-size:20.0pt;
	mso-bidi-font-size:20.0pt;
	text-transform:uppercase;
	mso-ansi-language:RU;
	mso-fareast-language:RU;
	mso-bidi-language:AR-SA;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:2.0cm 42.5pt 2.0cm 3.0cm;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]-->
</head>

<body lang=RU style='tab-interval:35.4pt'>

<div class=Section1>

<p class=H1 style='mso-outline-level:2'><a name="_Toc266272261"></a><a
name="_Toc265340301"></a><a name="_Toc263373072"><span style='mso-bookmark:
_Toc265340301'><span style='mso-bookmark:_Toc266272261'>5. Функции</span></span></a>
</p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272262"></a><a
name="_Toc265340302"></a><a name="_Toc263373073"><span style='mso-bookmark:
_Toc265340302'><span style='mso-bookmark:_Toc266272262'><span style='mso-ansi-language:
RU'>5.1. Общие сведения</span></span></span></a><span style='mso-ansi-language:
RU'><o:p></o:p></span></p>

<p class=P>Функция по своей сути – это подпрограмма, которая может
манипулировать данными и возвращать некоторое значение. Каждая программа имеет,
по крайней мере, одну функцию <span lang=EN-US style='mso-ansi-language:EN-US'>main</span>(),
которая при запуске программы вызывается автоматически. Функция<span
style='mso-spacerun:yes'>  </span><span lang=EN-US style='mso-ansi-language:
EN-US'>main</span>() может вызывать другие функции, те в свою очередь могут
вызывать следующие и т.д.</p>

<p class=P>Каждая функция обладает собственным именем, и, когда оно встречается
в программе, управление переходит к телу данной функции. Этот процесс
называется вызовом функции или обращением к функции.</p>

<p class=P>Сложные задачи следует ''разбивать'' на несколько более простых,
достаточно легко реализуемых отдельных функций, которые затем могут вызываться
по очереди. Различают два вида функций: определяемые пользователем и встроенные
(стандартные). Встроенные функции являются составной частью пакета компилятора,
пользовательские создаются самим программистом.</p>

<p class=P>Функции могут возвращать значения. После обращения к функции она
может выполнить некоторые действия, а затем в качестве результата своей работы
вернуть некоторое значение (возвращаемое значение), тип которого задаётся явно
или неявно. Если тип функции не указан, то неявно полагается, что функция
возвращает данные типа <span class=SpellE><span lang=EN-GB style='mso-ansi-language:
EN-GB'>int</span></span>.</p>

<p class=P>Таким образом, запись:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>myFunction</span>();<o:p></o:p></span></span></p>

<p class=P><i style='mso-bidi-font-style:normal'><o:p>&nbsp;</o:p></i></p>

<p class=P style='text-indent:0cm'>означает, что функция <span class=SpellE><span
lang=EN-US style='mso-ansi-language:EN-US'>myFunction</span></span> возвращает
целочисленное значение.</p>

<p class=P>В функцию можно также и передавать некоторые значения. Описание
посылаемых значений называется списком параметров.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> <span
class=SpellE>myFunction</span>(<span class=SpellE>int</span> x, float y);<o:p></o:p></span></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P>Это объявление означает, что функция <span class=SpellE><span
lang=EN-US style='mso-ansi-language:EN-US'>myFunction</span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US> </span></i>не только
возвращает целое число, но и принимает два значения в качестве параметров:
целочисленное и вещественное. Параметр описывает тип значения, которое будет
передано функции при её вызове. Фактические значения, передаваемые в функцию,
называются параметрами функции. Параметры функции могут быть разного типа.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>a</span> = <span
class=SpellE>myFunction</span>(3, 9.9);<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Здесь переменная целого <span class=GramE>типа</span> <span
class=Code><span style='font-size:12.0pt'>а</span></span> инициализируется
значением, возвращаемым функцией <span class=SpellE><span lang=EN-US
style='mso-ansi-language:EN-US'>myFunction</span></span>, а в качестве
параметров этой функции передаются значения 3 и 9.9.</p>

<p class=P>Параметром функции может быть любое корректное выражение, включающее
константы, переменные и функции, возвращающие некоторые значения.</p>

<p class=P>Использование функций в программе требует, чтобы функция сначала
была объявлена, а затем определена. Посредством объявления функции компилятору
сообщается её имя, тип возвращаемого значения и параметры. Ни одну функцию
нельзя вызвать в программе, если выше по тексту программы для неё не было
записано ни прототипа, ни реализации. Объявление функции называется прототипом.</p>

<p class=P>Прототипы многих встроенных функций уже записаны<span
style='mso-spacerun:yes'>  </span>в файлы заголовков, добавляемые в программу с
помощью #<i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US'>include</span></i>. Для пользовательских
функций программист должен сам позаботиться о включении в программу
соответствующих прототипов.</p>

<p class=P>Прототип функции представляет собой выражение, оканчивающееся точкой
с запятой, и состоит из типа возвращаемого значения функции, её имени и списка
формальных параметров. Список формальных параметров представляет собой список
всех параметров и их типов, разделённых запятыми. Составные части прототипа
функции показаны на рис 5.1.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=IMG><!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600"
 o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f"
 stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:342pt;
 height:100.5pt'>
 <v:imagedata src="5%20ФУНКЦИИ.files/image001.gif" o:title="64"/>
</v:shape><![endif]--><![if !vml]><img width=456 height=134
src="5%20ФУНКЦИИ.files/image001.gif" v:shapes="_x0000_i1025"><![endif]></p>

<p class=IMG><o:p>&nbsp;</o:p></p>

<p class=P align=center style='text-align:center;text-indent:0cm'>Рис.5.1.
Составные части прототипа функции</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>В прототипе и в определении функции тип возвращаемого значения, имя
и список формальных параметров должны соответствовать друг другу. Если такого
соответствия нет, компилятор покажет сообщение об ошибке. Однако прототип
функции не обязан содержать имена параметров, можно ограничиться только
указанием их типов. Например:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>long</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>area</span>(<span
class=SpellE>int</span>, <span class=SpellE>int</span>);<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Этот прототип объявляет функцию с именем <span lang=EN-US
style='mso-ansi-language:EN-US'>area</span>(), которая возвращает значение типа
<span lang=EN-US style='mso-ansi-language:EN-US'>long</span> и принимает два
целочисленных параметра.</p>

<p class=P>Для каждой функции всегда известен тип возвращаемого значения (если
он явно не объявлен, то по умолчанию принимается тип <span class=SpellE><span
lang=EN-US style='mso-ansi-language:EN-US'>int</span></span>). Если функция не
возвращает никакого значения, то в качестве типа возвращаемого значения,
используйте <span lang=EN-US style='mso-ansi-language:EN-US'>void</span>.</p>

<p class=P>Определение функции состоит из заголовка функц<span class=GramE>ии и
её</span> тела. Заголовок подобен прототипу функции, с тем различием, что <span
class=GramE>параметры</span> поименованные и в конце заголовка отсутствует
точка с запятой.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
area(<span class=SpellE>int</span> length, <span class=SpellE>int</span> width)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span><span class=SpellE>return</span> (<span
class=SpellE>length</span> * <span class=SpellE>width</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=P><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=P>Тело функции представляет собой набор выражений, заключённых в
фигурные скобки.</p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272263"></a><a
name="_Toc265340303"></a><a name="_Toc263373074"><span style='mso-bookmark:
_Toc265340303'><span style='mso-bookmark:_Toc266272263'><span style='mso-ansi-language:
RU'>5.2. Область видимости переменных</span></span></span></a><span
style='mso-ansi-language:RU'><o:p></o:p></span></p>

<p class=H3 style='mso-outline-level:4'><a name="_Toc266272264"></a><a
name="_Toc265340304"></a><a name="_Toc263373075"><span style='mso-bookmark:
_Toc265340304'><span style='mso-bookmark:_Toc266272264'>5.2.1. Локальные
переменные</span></span></a></p>

<p class=P>Можно не только передавать функции значения переменных, но и
объявлять переменные внутри тела функции. Это реализуется с помощью локальных
переменных, которые называются так потому, что существуют только внутри самой
функции. Когда выполнение программы возвращается из функции к основному коду,
локальные переменные удаляются из памяти.</p>

<p class=P>Локальные переменные определяются подобно другим переменным.
Параметры, переданные функции, тоже считаются локальными переменными и их можно
использовать как определённые внутри тела функции. Изменения, внесённые в
параметры во время выполнения функции, не влияют на значения, которые
передаются в функцию. То есть локальная копия каждого параметра создаётся в
самой функции. Такие локальные копии внешних переменных обрабатываются так же,
как и любые другие. Ниже представлен пример использования параметров функции и
переменных, локально определённых внутри функции.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>#include &lt;<span class=SpellE>stdio.h</span>&gt;<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>float</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
convert(float); //</span></span><span class=Code><span style='font-size:12.0pt'>Прототип</span></span><span
class=Code><span style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>функции</span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
main()<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>float</span> <span class=SpellE>TempFer,TempCel</span>; //</span></span><span
class=Code><span style='font-size:12.0pt'>Объявление</span></span><span
class=Code><span style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>переменных</span></span><span
class=Code><span style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>типа</span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> float<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span></span></span><span
class=SpellE><span class=Code><span style='font-size:12.0pt'>printf</span></span></span><span
class=Code><span style='font-size:12.0pt'>(“Ведите температуру по Фаренгейту<span
class=GramE>: ”</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span><span class=SpellE>scanf</span> (“%<span
class=SpellE>f</span>”,&amp;<span class=SpellE>TempFer</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span><span class=SpellE>TempCel=Convert</span>(<span
class=SpellE>TempFer</span>); //Вызывается функция и значение,<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>                            </span>//<span
class=GramE>возвращаемое</span> ей, присваивается<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>                            </span>//переменной <span
class=SpellE>TempCel</span><o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span><span class=SpellE>printf</span>(“/<span
class=SpellE><span class=GramE>n</span>Это</span> температура по Цельсию: ”);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span></span></span><span class=SpellE><span
class=GramE><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>printf</span></span></span></span><span class=GramE><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>(</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>“%<span
class=SpellE>f”,TempCel</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>}<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>float</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
convert(float <span class=SpellE>fer</span>) //</span></span><span class=Code><span
style='font-size:12.0pt'>Определение</span></span><span class=Code><span
style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>функции</span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>float</span> <span class=SpellE>cel</span>;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>cel</span></span> = ((<span class=SpellE>fer</span>
– 32) * 5) / 9;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>return</span> <span class=SpellE>cel</span>;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=H3 style='mso-outline-level:4'><a name="_Toc266272265"></a><a
name="_Toc265340305"></a><a name="_Toc263373076"><span style='mso-bookmark:
_Toc265340305'><span style='mso-bookmark:_Toc266272265'>5.2.2. Глобальные
переменные</span></span></a></p>

<p class=P>Переменные, определённые вне тела какой-либо функции, имеют
глобальную область видимости и доступны из любой функции в программе. Локальные
переменные, имена которых совпадают с именами глобальных переменных, не
изменяют значений последних. Если в функции есть переменная с тем же именем,
что и у глобальной, то при использовании внутри функции это имя относится к
локальной переменной, а не к глобальной. </p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>#<span class=SpellE>include</span>
&lt;<span class=SpellE>stdio.h</span>&gt;<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>void</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>myFunc</span>();<span
style='mso-spacerun:yes'>    </span>//прототип функции<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>x</span> = 5, <span
class=SpellE>y</span> = 7; //объявление глобальных переменных<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
main()<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>printf</span></span><span class=GramE>(</span>“x
from main: %<span class=SpellE>d”,x</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>printf</span></span><span class=GramE>(</span>“\n
y from main: %<span class=SpellE>d”,y</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>myFunc</span></span><span class=GramE>(</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>printf</span></span><span class=GramE>(</span>“\n
Return from <span class=SpellE>myFunc</span> \n”);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>printf</span></span><span class=GramE>(</span>“x
from main: %<span class=SpellE>d”,x</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>printf</span></span><span class=GramE>(</span>“\n
y from main: %<span class=SpellE>d”,y</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>}<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> <span
class=SpellE>myFunc</span>()<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>int</span></span> y = 10, x = 15;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>printf</span></span><span class=GramE>(</span>“\n
x from <span class=SpellE>myFunc</span>: %<span class=SpellE>d”,x</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>printf</span></span><span class=GramE>(</span>“\n
y from <span class=SpellE>myFunc</span>: %<span class=SpellE>d”,y</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>}<o:p></o:p></span></span></p>

<p class=P><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-ansi-language:EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></i></p>

<p class=P><span style='mso-no-proof:yes'>Результат</span><span lang=EN-US
style='mso-ansi-language:EN-US;mso-no-proof:yes'>:<o:p></o:p></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US;mso-no-proof:yes'>x
from main 5<o:p></o:p></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US;mso-no-proof:yes'>y
from main 7<o:p></o:p></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US;mso-no-proof:yes'>x
from myFunc 15<o:p></o:p></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US;mso-no-proof:yes'>y
from myFunc 10<o:p></o:p></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'>Return<span
style='mso-no-proof:yes'> from myFunc<o:p></o:p></span></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US;mso-no-proof:yes'>x
from main 5<o:p></o:p></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US;mso-no-proof:yes'>y</span><span
lang=EN-US style='mso-no-proof:yes'> </span><span lang=EN-US style='mso-ansi-language:
EN-US;mso-no-proof:yes'>from</span><span lang=EN-US style='mso-no-proof:yes'> </span><span
lang=EN-US style='mso-ansi-language:EN-US;mso-no-proof:yes'>main</span><span
style='mso-no-proof:yes'> 7<o:p></o:p></span></p>

<p class=P><span style='mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=P>Глобальные переменные необходимы в тех случаях, когда программисту
нужно сделать данные доступными для многих функций, а передавать данные из
одной функции в другую как параметры проблематично. Опасность использования
глобальных переменных исходит из их общедоступности, в результате чего одна
функция может изменить значение глобальной переменной, вызвав тем самым
нарушение работы другой функции. В таких ситуациях возможно появление ошибок,
которые очень трудно выявить.</p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272266"></a><a
name="_Toc265340306"></a><a name="_Toc263373077"><span style='mso-bookmark:
_Toc265340306'><span style='mso-bookmark:_Toc266272266'><span style='mso-ansi-language:
RU'>5.3. Передача параметров в функцию</span></span></span></a><span
style='mso-ansi-language:RU'><o:p></o:p></span></p>

<p class=P>Обычно параметры в функцию передаются двумя способами. Первый,
передача по значению – копируется значение фактического параметра в формальный
параметр функции. При этом изменения формального параметра не влияют на
значение фактического. </p>

<p class=P>Второй, передача адреса переменной в параметр. Но делать это следует
осторожно, так как в функции используется адрес для доступа к параметру и
изменения, сделанные в параметре, повлияют на переменную, адрес которой был
передан. </p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>#include &lt;<span class=SpellE>stdio.h</span>&gt;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>#include &lt;<span class=SpellE>conio.h</span>&gt;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>#include &lt;<span class=SpellE>iostream.h</span>&gt;<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> <span
class=SpellE>perestan</span>(<span class=SpellE>int</span> x, <span
class=SpellE>int</span> y);<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> <span
class=SpellE>perestanP</span>(<span class=SpellE>int</span> *x, <span
class=SpellE>int</span> *y);<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> <span
class=SpellE>perestanM</span>(<span class=SpellE>int</span> b[]);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
main()<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>clrscr</span></span><span class=GramE>(</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>int</span></span> a[2] = {4,5}, x = 4, y = 5;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span></span></span><span
class=SpellE><span class=Code><span style='font-size:12.0pt'>perestan</span></span></span><span
class=Code><span style='font-size:12.0pt'>(<span class=SpellE>x,y</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span></span></span><span class=SpellE><span
class=Code><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt'>printf</span></span></span><span
class=Code><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt'>(&quot;После
использования <span class=SpellE>perestan</span>() значения <span class=SpellE>х</span>
и у: %<span class=SpellE>d</span> %<span class=SpellE>d</span>&quot;, <span
class=SpellE>x</span>, <span class=SpellE>y</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span><span class=SpellE>perestanP</span>(&amp;<span
class=SpellE>x,&amp;y</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span></span></span><span class=SpellE><span
class=Code><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt'>printf</span></span></span><span
class=Code><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt'>(&quot;\<span
class=SpellE>n</span><span class=GramE> П</span>осле использования <span
class=SpellE>perestanP</span> значения <span class=SpellE>х</span> и у: %<span
class=SpellE>d</span> %<span class=SpellE>d</span>&quot;, <span class=SpellE>x</span>,
<span class=SpellE>y</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span></span></span><span class=SpellE><span
class=GramE><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>perestanM</span></span></span></span><span
class=GramE><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>(</span></span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>a);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span></span></span><span
class=SpellE><span class=GramE><span class=Code><span lang=EN-US
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-US'>printf</span></span></span></span><span
class=GramE><span class=Code><span lang=EN-US style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;mso-ansi-language:EN-US'>(</span></span></span><span
class=Code><span lang=EN-US style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
mso-ansi-language:EN-US'>&quot;\n </span></span><span class=Code><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt'>После</span></span><span
class=Code><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
EN-US'> </span></span><span class=Code><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt'>использования</span></span><span class=Code><span
lang=EN-US style='font-size:10.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
EN-US'> <span class=SpellE>perestanM</span> </span></span><span class=Code><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt'>значения</span></span><span
class=Code><span lang=EN-US style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
mso-ansi-language:EN-US'> a[0] </span></span><span class=Code><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt'>и</span></span><span
class=Code><span lang=EN-US style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
mso-ansi-language:EN-US'> a[1]: %d %d&quot;,<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span></span></span><span
class=Code><span lang=EN-US style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>       </span><span
class=GramE>a[</span>0], a[1]);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>getche</span></span><span class=GramE>(</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>}<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> <span
class=SpellE>perestan</span>(<span class=SpellE>int</span> x, <span
class=SpellE>int</span> y)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>int</span></span> temp;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>temp</span> = x;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span>x = y;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span>y = temp;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>}<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> <span
class=SpellE>perestanP</span>(<span class=SpellE>int</span> *x, <span
class=SpellE>int</span> *y)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>int</span></span> temp;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>temp</span> = *x;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span>*x = *y;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span>*y = temp;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>}<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> <span
class=SpellE>perestanM</span>(<span class=SpellE>int</span> b[]);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>int</span></span> temp;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>temp</span> = b[0];<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>b[</span>0] = b[1];<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span></span></span><span
class=SpellE><span class=Code><span style='font-size:12.0pt'>b</span></span></span><span
class=Code><span style='font-size:12.0pt'>[1] = <span class=SpellE>temp</span>;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=P><span style='mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=P>Результат:</p>

<p class=P>После использования <span class=SpellE><span lang=EN-US
style='mso-ansi-language:EN-US'>Perestan</span></span> значения <span
class=SpellE>х</span> и у: 4 5 – значения <span lang=EN-US style='mso-ansi-language:
EN-US'>x</span> и <span lang=EN-US style='mso-ansi-language:EN-US'>y</span> не
поменялись, т.к. просто копировалось значение параметра в функцию.</p>

<p class=P>После использования <span class=SpellE><span lang=EN-US
style='mso-ansi-language:EN-US'>PerestanP</span></span> значения <span
class=SpellE>х</span> и у: 5 4 – значения поменялись, т.к. в функцию уже
передавались адреса этих параметров</p>

<p class=P>После использования <span class=SpellE><span lang=EN-US
style='mso-ansi-language:EN-US'>PerestanM</span></span> значения <span
class=SpellE>a</span>[0] и <span class=SpellE>a</span>[1]: 5 4 - В данном
случае пересылается копия адреса массива а, массива <span lang=EN-US
style='mso-ansi-language:EN-US'>b</span> не существует. Запись в <span
class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>int</span></span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>b</span>[]
создаёт не массив, а указатель на массив.<span style='mso-spacerun:yes'> 
</span></p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272267"></a><a
name="_Toc265340307"></a><a name="_Toc263373078"><span style='mso-bookmark:
_Toc265340307'><span style='mso-bookmark:_Toc266272267'><span style='mso-ansi-language:
RU'>5.4. Рекурсивные функции</span></span></span></a><span style='mso-ansi-language:
RU'><o:p></o:p></span></p>

<p class=P>Функция может вызывать саму себя. Это называется <i
style='mso-bidi-font-style:normal'>рекурсией</i>, которая может быть прямой и
косвенной. Если функция вызывает саму себя – это <i style='mso-bidi-font-style:
normal'>прямая рекурсия</i>, если же она вызывает другую функцию, которая в
свою очередь вызывает первую, то это <i style='mso-bidi-font-style:normal'>косвенная
рекурсия</i>. Рекурсия полезна в тех случаях, когда выполняется процедура над
данными и потом эту же процедуру надо выполнить над полученным результатом.</p>

<p class=P>Важно рекурсию когда-нибудь прекратить (задать некоторое условие),
иначе рекурсивная функция будет вызывать себя до тех пор, пока приложение не
будет аварийно завершено в результате переполнения стека. Также при каждом
обращении к такой функции ей должны передаваться модифицированные данные, а
после завершения каждого экземпляра рекурсивной функции в <span class=GramE>вызывающую</span>
должен <span class=SpellE>возващаться</span> некоторый результат для
дальнейшего использования. <span class=SpellE>Рекурсивый</span> процесс должен
шаг за шагом так упрощать задачу, <span class=GramE>чтобы</span> в конце концов
на последнем шаге для нее появилось <span class=SpellE>нерекурсивное</span>
решение.</p>

<p class=P>Когда функция вызывает саму себя, передаётся новая копия данных этой
функции, что приводит иногда к большим затратам памяти. Локальные переменные во
второй версии независимы от локальных переменных первой и не могут
непосредственно влиять друг на друга.</p>

<p class=P>Пример использования рекурсии рассмотрим на программе нахождения
определённого члена ряда Фибоначчи:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=IMG>1,1,2,3,5,8,13,21,34…</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Каждое число ряда представляет собой сумму двух предыдущих чисел. В
общем случае <span class=SpellE><span class=Code><span style='font-size:12.0pt'>n</span></span></span>-<span
lang=EN-US style='mso-ansi-language:EN-US'>e</span> число равно сумме <span
class=Code><span style='font-size:12.0pt'>(n-2)</span></span>-го и <span
class=Code><span style='font-size:12.0pt'>(n-1)</span></span>-го чисел. </p>

<p class=P>Для рекурсивных функций необходимо условие прекращения рекурсии, в
ряду Фибоначчи условием прекращения будет <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>n</span></span></span><span class=Code><span
style='font-size:12.0pt'>&lt;3</span></span>.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>#include &lt;<span class=SpellE>stdio.h</span>&gt;<o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
fib (<span class=SpellE>int</span>);<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
main()<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>int</span></span> n, answer;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span></span></span><span
class=SpellE><span class=Code><span style='font-size:12.0pt'>printf</span></span></span><span
class=Code><span style='font-size:12.0pt'>(“Введите номер для нахождения<span
class=GramE>: ”</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span></span></span><span class=SpellE><span
class=GramE><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>scanf</span></span></span></span><span class=GramE><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>(</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>“%d”,
&amp;n);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>answer</span> = fib(n);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>printf</span></span><span class=GramE>(</span>“\n
answer is: %d”, answer);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>}<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
fib(<span class=SpellE>int</span> n)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>if</span> (n&lt;3)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>    </span><span
class=GramE>return</span> 1;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>else</span><o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>    </span><span
class=GramE>return</span> (fib(n-2) + fib(n-1));<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>После ввода параметра, программа проверяет, не меньше ли он числа 3,
и, если это так, то функция <span lang=EN-US style='mso-ansi-language:EN-US'>fib</span>()
возвращает значение 1. В противном случае выводится сумма значений,
возвращаемых при вызове функции <span lang=EN-US style='mso-ansi-language:EN-US'>fib</span>()
с параметрами <span class=Code><span style='font-size:12.0pt'>n-2</span></span>
и <span class=Code><span style='font-size:12.0pt'>n-1</span></span>. Таким
образом, эту программу можно представить как циклический вызов функции <span
lang=EN-US style='mso-ansi-language:EN-US'>fib</span>(). Единственными
вызовами, которые немедленно возвращают 1, являются вызовы функций <span
lang=EN-US style='mso-ansi-language:EN-US'>fib</span>(1) и <span lang=EN-US
style='mso-ansi-language:EN-US'>fib</span>(2). Рекурсивное использование
функции <span lang=EN-US style='mso-ansi-language:EN-US'>fib</span>() показано
на рис 5.3.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=IMG><!--[if gte vml 1]><v:shape id="_x0000_i1026" type="#_x0000_t75"
 style='width:548.25pt;height:225.75pt'>
 <v:imagedata src="5%20ФУНКЦИИ.files/image002.png" o:title="69"/>
</v:shape><![endif]--><![if !vml]><img width=731 height=301
src="5%20ФУНКЦИИ.files/image003.jpg" v:shapes="_x0000_i1026"><![endif]></p>

<p class=IMG><o:p>&nbsp;</o:p></p>

<p class=P align=center style='text-align:center;text-indent:0cm'>Рис.5.3.
Использование рекурсии</p>

<p class=P><o:p>&nbsp;</o:p></p>

<b style='mso-bidi-font-weight:normal'><span style='font-size:18.0pt;
mso-bidi-font-size:10.0pt;font-family:"Times New Roman";mso-fareast-font-family:
"Times New Roman";text-transform:uppercase;mso-ansi-language:RU;mso-fareast-language:
RU;mso-bidi-language:AR-SA'><br clear=all style='page-break-before:always'>
</span></b>

<p class=H2><a name="_Toc266272268"></a><a name="_Toc265340308"></a><a
name="_Toc263373079"><span style='mso-bookmark:_Toc265340308'><span
style='mso-bookmark:_Toc266272268'><span style='mso-ansi-language:RU'>5.5.
Использование функций в качестве параметров функций</span></span></span></a><span
style='mso-ansi-language:RU'><o:p></o:p></span></p>

<p class=P>Вполне допустимо для одной функции принимать в качестве параметра
значение, возвращаемое другой функцией. Это можно рассмотреть на простом
примере: </p>

<p class=P>Имеются некоторые функции: <span lang=EN-US style='mso-ansi-language:
EN-US'>double</span>() – удвоение числа, <span lang=EN-US style='mso-ansi-language:
EN-US'>triple</span>() – утроение числа, <span lang=EN-US style='mso-ansi-language:
EN-US'>square</span>() – возведение в квадрат, <span class=SpellE>cube</span>()
– возведение в куб, возвращающие некоторые целые значения. Можно записать:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>answer</span></span></span><span
class=Code><span style='font-size:12.0pt'> = (<span class=SpellE>doubleValue</span>(<span
class=SpellE>tripleValue</span>(<span class=SpellE>square</span>(<span
class=SpellE>cube</span>(<span class=SpellE>x</span>)))));<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=GramE>Это выражение принимает переменную <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>х</span></span></span>,
и передаёт её в качестве параметра функции <span class=SpellE>cube</span>(),
возвращаемое значение которой (куб числа) передаётся как параметр функции <span
lang=EN-US style='mso-ansi-language:EN-US'>square</span>(). После этого
возвращаемое значение функции (квадрат числа) передаётся в качестве параметра
функции <span class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>tripleValue</span></span>().
Возвращаемое значение данной функции (утроенное число) передаётся как параметр
функции <span class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>doubleValue</span></span>().
Наконец, значение возврата функции <span class=SpellE><span lang=EN-US
style='mso-ansi-language:EN-US'>doubleValue</span></span>() (удвоенное число)
присваивается переменной <span lang=EN-US style='mso-ansi-language:EN-US'>answer</span>.
</span></p>

<p class=P>В данном примере, при возникновении ошибки, достаточно трудно
выявить ''виноватую функцию'', для решения этой задачи предлагается
альтернативный вариант, где показаны промежуточные значения:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>unsigned</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
long x = 2;<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>unsigned</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
long cub = cube(x); // 2 </span></span><span class=Code><span style='font-size:
12.0pt'>в</span></span><span class=Code><span style='font-size:12.0pt;
mso-ansi-language:EN-US'> </span></span><span class=Code><span
style='font-size:12.0pt'>кубе</span></span><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'> = 8<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>unsigned</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
long <span class=SpellE>squar</span> = square(cub); // 8 </span></span><span
class=Code><span style='font-size:12.0pt'>в</span></span><span class=Code><span
style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>квадрате</span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> =
64<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>unsigned</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
long <span class=SpellE>tripl</span> = <span class=SpellE>tripleValue</span>(<span
class=SpellE>squar</span>); // 64 * 3 = 192<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>unsigned</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
long answer = <span class=SpellE>doubleValue</span>(<span class=SpellE>tripl</span>);
// 192 * 2 = 384<o:p></o:p></span></span></p>

<p class=P><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=P>Применены значения параметров, используемые по умолчанию.</p>

<p class=P>Для каждого параметра, объявляемого в прототипе и определении
функции, должно быть передано соответствующее значение в вызове функции.<span
style='mso-spacerun:yes'>  </span>Передаваемое значение должно иметь
объявленный тип. Из этого правила существует исключение. Если в прототипе
функции для параметра объявляется стандартное значение, то это значение
используется, если при вызове функции для этого параметра не установлено
никакого значения. Например, прототип функции: </p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>long</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>myFunc</span>(<span
class=SpellE>int</span> <span class=SpellE>x</span> = 50);<o:p></o:p></span></span></p>

<p class=P><i style='mso-bidi-font-style:normal'><o:p>&nbsp;</o:p></i></p>

<p class=P>Если при вызове этой функции в программе параметр не будет
представлен, по умолчанию он будет равен числу 50. Поскольку в прототипах
функций имена параметров не обязательны, то последний вариант можно
представить:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>long</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>myFunc</span>(<span
class=SpellE>int</span> = 50);<o:p></o:p></span></span></p>

<p class=P><i style='mso-bidi-font-style:normal'><o:p>&nbsp;</o:p></i></p>

<p class=P>Имя параметра, для которого в прототипе устанавливается значение по
умолчанию, может не совпадать с именем параметра, указываемого в заголовке
функции (значение, заданное по умолчанию присваивается по позиции, а не по
имени).</p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272269"></a><a
name="_Toc265340309"></a><a name="_Toc263373080"><span style='mso-bookmark:
_Toc265340309'><span style='mso-bookmark:_Toc266272269'><span style='mso-ansi-language:
RU'>5.6. Указатели на функции</span></span></span></a><span style='mso-ansi-language:
RU'><o:p></o:p></span></p>

<p class=P>Можно объявить переменную-указатель на функцию и в дальнейшем
вызывать её с помощью этого указателя.</p>

<p class=P>В объявлении </p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>long</span></span></span><span
class=Code><span style='font-size:12.0pt'> (*<span class=SpellE>p</span>) (<span
class=SpellE>int</span>);<o:p></o:p></span></span></p>

<p class=P><i style='mso-bidi-font-style:normal'><o:p>&nbsp;</o:p></i></p>

<p class=P style='text-indent:0cm'>создаётся указатель <span class=SpellE><span
class=Code><span style='font-size:12.0pt'>p</span></span></span> на функцию,
которая принимает целочисленный параметр и возвращает значение типа <span
lang=EN-US style='mso-ansi-language:EN-US'>long</span>. Круглые скобки вокруг <span
class=Code><span style='font-size:12.0pt'>(*<span class=SpellE>p</span>)</span></span>
обязательны. Если убрать эти скобки, то это выражение будет объявлять функцию <span
class=SpellE><span class=Code><span style='font-size:12.0pt'>p</span></span></span>,
принимающую целочисленный параметр и возвращающую указатель на значение типа <span
lang=EN-US style='mso-ansi-language:EN-US'>long</span>. Чтобы связать указатель
на функцию с определённой функцией, нужно просто записать для него операцию
присваивания, указав в правой части имя функции без каких-либо скобок.<i
style='mso-bidi-font-style:normal'> </i>При вызове функции через указатель
следует задать все параметры, установленные для данной функции. </p>

<p class=P>Пример объявления и использования указателя на функцию:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>#include &lt;<span class=SpellE>stdio.h</span>&gt;<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> <span
class=SpellE>mult</span>(<span class=SpellE>int</span>, <span class=SpellE>int</span>);<o:p></o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
main()<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>int</span></span> x, y;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span></span></span><span
class=SpellE><span class=Code><span style='font-size:12.0pt'>void</span></span></span><span
class=Code><span style='font-size:12.0pt'> (*<span class=SpellE>p</span>)(<span
class=SpellE>int</span>, <span class=SpellE>int</span>); //Объявление указателя
на функцию<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span><span class=SpellE>p</span> = <span
class=SpellE>mult</span>;<span style='mso-spacerun:yes'>           
</span>//Связь указателя с функцией<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span></span></span><span class=SpellE><span
class=GramE><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>scanf</span></span></span></span><span class=GramE><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>(</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>“%d
%d”, &amp;x, &amp;y);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>p(</span><span class=SpellE>x,y</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>}<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=GramE><span class=Code><span lang=EN-US
style='font-size:12.0pt;mso-ansi-language:EN-US'>void</span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'> <span
class=SpellE>mult</span>(<span class=SpellE>int</span> x, <span class=SpellE>int</span>
y)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span><span class=SpellE>printf</span>(“%<span
class=SpellE>d</span>”, <span class=SpellE>x</span> * <span class=SpellE>y</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272270"></a><a
name="_Toc265340310"></a><a name="_Toc263373081"><span style='mso-bookmark:
_Toc265340310'><span style='mso-bookmark:_Toc266272270'><span style='mso-ansi-language:
RU'>5.7. Структура программы на Си</span></span></span></a><span
style='mso-ansi-language:RU'><o:p></o:p></span></p>

<p class=P>Все программы содержат одну или более функций. Функция <i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>main</span>() </i>должна всегда присутствовать в программе, это первая
функция, которая получает управление. Вид программы на Си показан ниже. Функции
от <span class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>func</span></span>1()
до <span class=SpellE><span lang=EN-US style='mso-ansi-language:EN-US'>funcN</span></span>()
– функции пользователя.</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>команды
препроцессора<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>объявление
глобальных типов<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>объявление
глобальных переменных<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>прототипы функций<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>тип_возврата</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>main</span>(параметры)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span>операторы<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>тип_возврата</span></span></span><span
class=Code><span style='font-size:12.0pt'> func1(параметры)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span>операторы<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>...<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>тип_возврата</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>funcN</span>(параметры)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span>операторы<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=P><span style='mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=H2 style='mso-outline-level:3'><a name="_Toc266272271"></a><a
name="_Toc265340311"></a><a name="_Toc263373082"><span style='mso-bookmark:
_Toc265340311'><span style='mso-bookmark:_Toc266272271'><span style='mso-ansi-language:
RU'>5.8. Передача параметров в функцию </span><span lang=EN-US>main</span></span></span></a><span
style='mso-bookmark:_Toc263373082'><span style='mso-bookmark:_Toc265340311'><span
style='mso-bookmark:_Toc266272271'><span style='mso-ansi-language:RU'>()</span></span></span></span><span
style='mso-ansi-language:RU'><o:p></o:p></span></p>

<p class=P>Во многих операционных системах, в частности, в <span lang=EN-US
style='mso-ansi-language:EN-US'>DOS</span> и <span lang=EN-US style='mso-ansi-language:
EN-US'>UNIX</span>, предусмотрена возможность передачи аргументов в функцию <span
lang=EN-US style='mso-ansi-language:EN-US'>main</span>() из командной строки.
Аргументы командной строки – это текст, записанный после имени запускаемого на исполнение
файла. При использовании командной строки функция <span lang=EN-US
style='mso-ansi-language:EN-US'>main</span>() выглядит так:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=SpellE><span class=Code><span style='font-size:12.0pt'>int</span></span></span><span
class=Code><span style='font-size:12.0pt'> <span class=SpellE>main</span>(<span
class=SpellE>int</span> <span class=SpellE>argc</span>, <span class=SpellE>char</span>
*<span class=SpellE>argv</span>[])<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span>...<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>}<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>либо</span></span><span
class=Code><span style='font-size:12.0pt;mso-ansi-language:EN-US'> </span></span><span
class=Code><span style='font-size:12.0pt'>так</span></span><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></span></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
main(<span class=SpellE>int</span> <span class=SpellE>argc</span>, char **<span
class=SpellE>argv</span>)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'><span
style='mso-spacerun:yes'>  </span>...<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Параметр <span class=SpellE><span class=Code><span style='font-size:
12.0pt'>argc</span></span></span> сообщает количество командных параметров при
обращении к функции <span lang=EN-US style='mso-ansi-language:EN-US'>main</span>(),
учитывая в качестве нулевого параметра имя самой выполняемой программы. Другими
словами параметр <span class=SpellE><span class=Code><span style='font-size:
12.0pt'>argc</span></span></span> сообщает количество слов в командной строке,
разделенных пробелами.</p>

<p class=P><span class=GramE>Параметр <span class=SpellE><span class=Code><span
style='font-size:12.0pt'>argv</span></span></span> – массив символьных строк
(слов), в который помещаются аргументы командной строки (аргумент – любой
текст, не содержащий символов «пробел» или «табуляция».</span> Если возникает
необходимость передать в качестве аргумента строку, содержащую пробелы или
символы табуляции, то такую строку необходимо заключить в кавычки: <span
class=GramE>“Студент БГУИР”).</span></p>

<p class=P>Обычно аргументы командной строки используются для задания опций
выполнения программы и передачи программе имен файлов, а также имен функций и,
непосредственно, данных.</p>

<p class=P>Пример программы, получающей в качестве параметров названия городов
и выводящей их в обратном порядке:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>#include &lt;<span class=SpellE>stdio.h</span>&gt;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>#include &lt;<span class=SpellE>conio.h</span>&gt;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=SpellE><span class=GramE><span class=Code><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>int</span></span></span></span><span
class=Code><span lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US'>
main(<span class=SpellE>int</span> <span class=SpellE>argc</span>, char *<span
class=SpellE>argv</span>[])<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>{<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>i</span>;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=GramE>for</span> (<span class=SpellE>i</span> = <span class=SpellE>argc</span>
– 1; <span class=SpellE>i</span> &gt;= 1; <span class=SpellE>i</span>--)<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>    </span><span
class=SpellE><span class=GramE>printf</span></span><span class=GramE>(</span>“%s
”, <span class=SpellE>argv</span>[<span class=SpellE>i</span>]);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>getch</span></span><span class=GramE>(</span>);<o:p></o:p></span></span></p>

<p class=P><span class=Code><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span></span></span><span
class=SpellE><span class=Code><span style='font-size:12.0pt'>return</span></span></span><span
class=Code><span style='font-size:12.0pt'> 0;<o:p></o:p></span></span></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>}<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Строка запуска программы содержит имя файла (<span lang=EN-US
style='mso-ansi-language:EN-US'>primer</span>.<span lang=EN-US
style='mso-ansi-language:EN-US'>exe</span>) и список передаваемых параметров,
разделенных пробелами</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P><span class=Code><span style='font-size:12.0pt'>c:\primer.exe Вите<span
class=GramE>бск Бр</span>ест Минск<o:p></o:p></span></span></p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>В результате выполнения программы на экран будет выдана следующая
информация:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>Минск Брест Витебск</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=P>В памяти будет содержаться следующие данные:</p>

<p class=P><o:p>&nbsp;</o:p></p>

<p class=IMG><!--[if gte vml 1]><v:shape id="_x0000_i1027" type="#_x0000_t75"
 style='width:330pt;height:87pt'>
 <v:imagedata src="5%20ФУНКЦИИ.files/image004.png" o:title="73"/>
</v:shape><![endif]--><![if !vml]><img width=440 height=116
src="5%20ФУНКЦИИ.files/image005.jpg" v:shapes="_x0000_i1027"><![endif]></p>

<p class=IMG><o:p>&nbsp;</o:p></p>

<p class=P>Элемент <span class=SpellE><span class=Code><span style='font-size:
12.0pt'>argv</span></span></span><span class=Code><span style='font-size:12.0pt'>[0]</span></span>
может содержать не только имя вызываемого файла, но и полный путь к нему.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
